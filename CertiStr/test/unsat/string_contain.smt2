(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf
Generated on: 2025-04-03
Application: Evaluation of Regular Constraint Propagation Techniques
Target solver: OSTRICH, cvc5, Z3-Noodler, Z3, Z3alpha
Time limit: 60.0
This example models a reverse transcription process inspired by bioinformatics. 
Here, an unknown RNA string y is converted into a DNA string by applying a series of str.replace_all operations that simulate nucleotide base pairing. 
In addition, the RNA string is required to contain a specific pattern.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(declare-const pre String)
(declare-const suf String)
(declare-const tmp String)
(declare-const y String)
(declare-const x String)
(declare-const z String)

; Reverse translation: RNA to DNA
(assert (= x (str.replace_all y "u" "A")))


; Concrete DNA and RNA strings
(assert (= x "AT"))
(assert (= z "uu"))

; Pattern must be contained in y
(assert (= tmp (str.++ pre z)))
(assert (= y (str.++ tmp suf)))

(check-sat)
(get-value (y))
(exit)
