(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf
Generated on: 2025-04-03
Application: Evaluation of String Solvers on PCP
Target solver: cvc5, Z3, OSTRICH
Time limit: 60.0
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun TopStr () String)
(declare-fun BottomStr () String)

(declare-fun Top_0 () String)
(declare-fun Bottom_0 () String)
(assert (= Top_0 "111"))
(assert (= Bottom_0 "110"))
(declare-fun Top_1 () String)
(declare-fun Bottom_1 () String)
(assert (= Top_1 "011"))
(assert (= Bottom_1 "100"))
(declare-fun Top_2 () String)
(declare-fun Bottom_2 () String)
(assert (= Top_2 "110"))
(assert (= Bottom_2 "101"))

(declare-fun x () String)
(declare-fun y () String)
(declare-fun x_0 () String)
(declare-fun y_0 () String)
(declare-fun x_1 () String)
(declare-fun y_1 () String)
(declare-fun x_2 () String)
(declare-fun y_2 () String)
(assert (= x_1 (str.replace_all x_0 "2" "111")))
(assert (= x_2 (str.replace_all x_1 "3" "011")))
(assert (= x (str.replace_all x_2 "4" "110")))
(assert (= y_1 (str.replace_all y_0 "2" "110")))
(assert (= y_2 (str.replace_all y_1 "3" "100")))
(assert (= y (str.replace_all y_2 "4" "101")))
(assert (str.in_re x_0 (re.+ (re.union (str.to_re "2") (str.to_re "3") (str.to_re "4")))))
(assert (str.in_re y_0 (re.+ (re.union (str.to_re "2") (str.to_re "3") (str.to_re "4")))))

(assert (= x y))
(check-sat)
(exit)
