(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_348 () String)
(declare-fun b_sigmaStar_348 () Bool)
(declare-fun sigmaStar_552 () String)
(declare-fun b_sigmaStar_552 () Bool)
(declare-fun sigmaStar_662 () String)
(declare-fun b_sigmaStar_662 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_47 () String)
(declare-fun b_literal_47 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_58 () String)
(declare-fun b_literal_58 () Bool)
(declare-fun literal_65 () String)
(declare-fun b_literal_65 () Bool)
(declare-fun literal_67 () String)
(declare-fun b_literal_67 () Bool)
(declare-fun literal_68 () String)
(declare-fun b_literal_68 () Bool)
(declare-fun literal_69 () String)
(declare-fun b_literal_69 () Bool)
(declare-fun sigmaStar_081 () String)
(declare-fun b_sigmaStar_081 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_83 () String)
(declare-fun b_literal_83 () Bool)
(declare-fun sigmaStar_185 () String)
(declare-fun b_sigmaStar_185 () Bool)
(declare-fun literal_90 () String)
(declare-fun b_literal_90 () Bool)
(declare-fun sigmaStar_287 () String)
(declare-fun b_sigmaStar_287 () Bool)
(declare-fun literal_89 () String)
(declare-fun b_literal_89 () Bool)
(declare-fun literal_96 () String)
(declare-fun b_literal_96 () Bool)
(declare-fun sigmaStar_490 () String)
(declare-fun b_sigmaStar_490 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_10 () String)
(declare-fun b_x_10 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_34 () String)
(declare-fun b_x_34 () Bool)
(declare-fun x_37 () String)
(declare-fun b_x_37 () Bool)
(declare-fun x_41 () String)
(declare-fun b_x_41 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_50 () String)
(declare-fun b_x_50 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_64 () String)
(declare-fun b_x_64 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_76 () String)
(declare-fun b_x_76 () Bool)
(declare-fun x_78 () String)
(declare-fun b_x_78 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_91 () String)
(declare-fun b_x_91 () Bool)
(declare-fun x_92 () String)
(declare-fun b_x_92 () Bool)
(declare-fun x_93 () String)
(declare-fun b_x_93 () Bool)
(declare-fun x_94 () String)
(declare-fun b_x_94 () Bool)
(declare-fun x_95 () String)
(declare-fun b_x_95 () Bool)
(declare-fun x_97 () String)
(declare-fun b_x_97 () Bool)
(declare-fun x_98 () String)
(declare-fun b_x_98 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)

(assert (str.in_re atkPtn (str.to_re "javascript:")))
(assert (= atk_sink (str.++ atk_sigmaStar_1 (str.++ atkPtn atk_sigmaStar_2))))
(check-sat)
(exit)