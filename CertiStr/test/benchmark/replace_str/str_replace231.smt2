(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun sigmaStar_4256 () String)
(declare-fun b_sigmaStar_4256 () Bool)
(declare-fun literal_44 () String)
(declare-fun b_literal_44 () Bool)
(declare-fun sigmaStar_4258 () String)
(declare-fun b_sigmaStar_4258 () Bool)
(declare-fun literal_45 () String)
(declare-fun b_literal_45 () Bool)
(declare-fun sigmaStar_4260 () String)
(declare-fun b_sigmaStar_4260 () Bool)
(declare-fun literal_48 () String)
(declare-fun b_literal_48 () Bool)
(declare-fun sigmaStar_4262 () String)
(declare-fun b_sigmaStar_4262 () Bool)
(declare-fun sigmaStar_safe_63 () String)
(declare-fun b_sigmaStar_safe_63 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_55 () String)
(declare-fun b_literal_55 () Bool)
(declare-fun literal_62 () String)
(declare-fun b_literal_62 () Bool)
(declare-fun literal_64 () String)
(declare-fun b_literal_64 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_49 () String)
(declare-fun b_x_49 () Bool)
(declare-fun x_50 () String)
(declare-fun b_x_50 () Bool)
(declare-fun x_51 () String)
(declare-fun b_x_51 () Bool)
(declare-fun x_52 () String)
(declare-fun b_x_52 () Bool)
(declare-fun x_54 () String)
(declare-fun b_x_54 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_63 () String)
(declare-fun b_x_63 () Bool)
(declare-fun x_65 () String)
(declare-fun b_x_65 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)


(assert (= literal_32 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x65\x78\x65"))

(assert (= literal_39 "\x20\x2b\x2b\x20\x2d\x65\x20\x20\x5c\x22\x2f\x2f\x2e\x67\x69\x66\x5c\x22\x20"))

(assert (= literal_44 "\x5c\x22\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x64\x61\x72\x77\x69\x6e\x5c\x22\x20\x2d\x65\x20\x5c\x22\x2f\x2f\x2e\x67\x69\x66\x5c\x22\x20"))

(assert (= literal_45 "\x5c\x22\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x6c\x69\x6e\x75\x78\x5c\x22\x20\x2d\x65\x20\x5c\x22\x2f\x2f\x2e\x67\x69\x66\x5c\x22\x20"))

(assert (= literal_48 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x20\x2d\x65\x20\x2f\x2f\x2e\x67\x69\x66\x20"))
(assert (str.in_re sigmaStar_safe_63 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_53 ""))

(assert (= literal_55 "\x54\x68\x65\x20\x73\x68\x65\x6c\x6c\x20\x63\x6f\x6d\x6d\x61\x6e\x64\x3c\x62\x72\x20\x2f\x3e"))

(assert (= literal_62 "\x3c\x62\x72\x20\x2f\x3e\x72\x65\x74\x75\x72\x6e\x65\x64\x20\x73\x74\x61\x74\x75\x73\x20\x3d\x20"))

(assert (= literal_64 "\x3c\x62\x72\x20\x2f\x3e\x5c\x6e"))
(assert (str.in_re atkPtn (re.++ (str.to_re "\\"";") (re.++ (re.* re.allchar) (str.to_re "//")))))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_47 (str.replace literal_32 " " "^ ") ))



(assert (= x_49 (str.++ literal_39 sigmaStar_4256)))




(assert (= x_50 (str.++ literal_44 sigmaStar_4258)))




(assert (= x_51 (str.++ literal_45 sigmaStar_4260)))




(assert (= x_52 (str.++ literal_48 sigmaStar_4262)))




(assert (= x_54 (str.++ x_47 x_49)))


(assert (= x_56 x_52))

(assert (= x_56 sigmaStar_safe_63))

(assert (= x_57 x_56))

(assert (= x_57 x_54))

(assert (= x_58 x_57))

(assert (= x_58 literal_53))

(assert (= x_59 x_58))

(assert (= x_59 x_51))

(assert (= x_60 x_59))

(assert (= x_60 x_50))



(assert (= x_61 (str.++ literal_55 x_60)))




(assert (= x_63 (str.++ x_61 literal_62)))




(assert (= x_65 (str.++ x_63 literal_64)))


(assert (= sink x_65))
(assert (= sink atk_sink))


(check-sat)
(exit)