(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun sigmaStar_053 () String)
(declare-fun b_sigmaStar_053 () Bool)
(declare-fun literal_12 () String)
(declare-fun b_literal_12 () Bool)
(declare-fun sigmaStar_855 () String)
(declare-fun b_sigmaStar_855 () Bool)
(declare-fun literal_15 () String)
(declare-fun b_literal_15 () Bool)
(declare-fun sigmaStar_357 () String)
(declare-fun b_sigmaStar_357 () Bool)
(declare-fun literal_16 () String)
(declare-fun b_literal_16 () Bool)
(declare-fun literal_25 () String)
(declare-fun b_literal_25 () Bool)
(declare-fun sigmaStar_263 () String)
(declare-fun b_sigmaStar_263 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun sigmaStar_2465 () String)
(declare-fun b_sigmaStar_2465 () Bool)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_34 () String)
(declare-fun b_literal_34 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun sigmaStar_169 () String)
(declare-fun b_sigmaStar_169 () Bool)
(declare-fun literal_44 () String)
(declare-fun b_literal_44 () Bool)
(declare-fun literal_43 () String)
(declare-fun b_literal_43 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_41 () String)
(declare-fun b_literal_41 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_55 () String)
(declare-fun b_literal_55 () Bool)
(declare-fun literal_56 () String)
(declare-fun b_literal_56 () Bool)
(declare-fun literal_57 () String)
(declare-fun b_literal_57 () Bool)
(declare-fun literal_65 () String)
(declare-fun b_literal_65 () Bool)
(declare-fun literal_72 () String)
(declare-fun b_literal_72 () Bool)
(declare-fun literal_79 () String)
(declare-fun b_literal_79 () Bool)
(declare-fun literal_78 () String)
(declare-fun b_literal_78 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_76 () String)
(declare-fun b_literal_76 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_74 () String)
(declare-fun b_literal_74 () Bool)
(declare-fun literal_80 () String)
(declare-fun b_literal_80 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun x_18 () String)
(declare-fun b_x_18 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun x_20 () String)
(declare-fun b_x_20 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_27 () String)
(declare-fun b_x_27 () Bool)
(declare-fun x_28 () String)
(declare-fun b_x_28 () Bool)
(declare-fun x_30 () String)
(declare-fun b_x_30 () Bool)
(declare-fun x_31 () String)
(declare-fun b_x_31 () Bool)
(declare-fun x_33 () String)
(declare-fun b_x_33 () Bool)
(declare-fun x_35 () String)
(declare-fun b_x_35 () Bool)
(declare-fun x_38 () String)
(declare-fun b_x_38 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_49 () String)
(declare-fun b_x_49 () Bool)
(declare-fun x_50 () String)
(declare-fun b_x_50 () Bool)
(declare-fun x_51 () String)
(declare-fun b_x_51 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_63 () String)
(declare-fun b_x_63 () Bool)
(declare-fun x_64 () String)
(declare-fun b_x_64 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_67 () String)
(declare-fun b_x_67 () Bool)
(declare-fun x_68 () String)
(declare-fun b_x_68 () Bool)
(declare-fun x_69 () String)
(declare-fun b_x_69 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_71 () String)
(declare-fun b_x_71 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_83 () String)
(declare-fun b_x_83 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)

(assert (str.in_re sigmaStar_safe_50 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_51 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_11 "\x75\x73\x65\x72\x5f\x67\x72\x6f\x75\x70\x73\x20\x52\x45\x47\x45\x58\x50\x28\x27\x5e\x5c\x5c\x5c\x2e"))

(assert (= literal_12 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_15 ""))

(assert (= literal_16 "\x24\x7c\x5c\x5c\x5c\x2e"))

(assert (= literal_25 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_29 "\x20\x28\x61\x64\x6d\x69\x6e\x5f\x72\x69\x67\x68\x74\x73\x3d\x27"))

(assert (= literal_32 "\x5c\x5c\x5c\x2e\x7c\x5c\x5c\x5c\x2e"))

(assert (= literal_34 "\x27\x29"))

(assert (= literal_36 "\x27"))

(assert (= literal_44 "\x28\x2a\x29"))

(assert (= literal_43 "\x28\x2a\x29"))

(assert (= literal_42 "\x28\x2a\x29"))

(assert (= literal_41 "\x28\x2a\x29"))

(assert (= literal_40 "\x28\x2a\x29"))

(assert (= literal_39 "\x28\x2a\x29"))

(assert (= literal_52 "\x53\x45\x4c\x45\x43\x54\x20\x43\x6f\x75\x6e\x74"))

(assert (= literal_53 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x32\x27"))

(assert (= literal_37 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d\x27"))

(assert (= literal_54 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x31\x27"))

(assert (= literal_55 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x34\x27"))

(assert (= literal_56 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x33\x27"))

(assert (= literal_57 "\x24\x27\x29"))

(assert (= literal_65 "\x20\x46\x52\x4f\x4d\x20"))

(assert (= literal_72 "\x20\x57\x48\x45\x52\x45\x20"))

(assert (= literal_79 "\x75\x73\x65\x72\x73"))

(assert (= literal_78 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_77 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_76 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_75 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74"))

(assert (= literal_74 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_80 ""))
(assert (str.in_re atkPtn (re.++ (re.union (str.to_re "%27") (str.to_re "'")) (str.to_re "union"))))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_13 sigmaStar_safe_50))

(assert (= x_13 sigmaStar_safe_51))



(assert (= x_14 (str.++ literal_11 sigmaStar_053)))




(assert (= x_18 (str.++ literal_12 sigmaStar_855)))


(assert (= x_19 literal_15))

(assert (= x_19 sigmaStar_357))

(assert (= x_20 x_19))

(assert (= x_20 x_13))



(assert (= x_23 (str.++ x_14 literal_16)))


(assert (= x_27 (str.replace x_20 "." "' OR admin_rights='") ))



(assert (= x_28 (str.++ x_18 literal_25)))




(assert (= x_30 (str.++ x_23 sigmaStar_263)))




(assert (= x_31 (str.++ literal_29 x_27)))




(assert (= x_33 (str.++ x_28 sigmaStar_2465)))




(assert (= x_35 (str.++ x_30 literal_32)))




(assert (= x_38 (str.++ x_31 literal_34)))




(assert (= x_45 (str.++ x_33 literal_36)))




(assert (= x_46 (str.++ x_35 sigmaStar_169)))


(assert (= x_47 literal_44))

(assert (= x_47 literal_43))

(assert (= x_48 x_47))

(assert (= x_48 literal_42))

(assert (= x_49 x_48))

(assert (= x_49 literal_41))

(assert (= x_50 x_49))

(assert (= x_50 literal_40))

(assert (= x_51 x_50))

(assert (= x_51 literal_39))



(assert (= x_58 (str.++ literal_52 x_51)))




(assert (= x_59 (str.++ x_38 literal_53)))




(assert (= x_60 (str.++ literal_37 x_45)))




(assert (= x_61 (str.++ sigmaStar_n0 literal_54)))




(assert (= x_62 (str.++ sigmaStar_n1 literal_55)))




(assert (= x_63 (str.++ sigmaStar_n2 literal_56)))




(assert (= x_64 (str.++ x_46 literal_57)))




(assert (= x_66 (str.++ x_58 literal_65)))


(assert (= x_67 x_64))

(assert (= x_67 x_63))

(assert (= x_68 x_67))

(assert (= x_68 x_62))

(assert (= x_69 x_68))

(assert (= x_69 x_61))

(assert (= x_70 x_69))

(assert (= x_70 x_60))

(assert (= x_71 x_70))

(assert (= x_71 x_59))



(assert (= x_73 (str.++ literal_72 x_71)))


(assert (= x_81 literal_79))

(assert (= x_81 literal_78))

(assert (= x_82 x_81))

(assert (= x_82 literal_77))

(assert (= x_83 x_82))

(assert (= x_83 literal_76))

(assert (= x_84 x_83))

(assert (= x_84 literal_75))

(assert (= x_85 x_84))

(assert (= x_85 literal_74))

(assert (= x_86 x_73))

(assert (= x_86 literal_80))



(assert (= x_87 (str.++ x_66 x_85)))




(assert (= x_88 (str.++ x_87 x_86)))


(assert (= sink x_88))
(assert (= sink atk_sink))


(check-sat)
(exit)