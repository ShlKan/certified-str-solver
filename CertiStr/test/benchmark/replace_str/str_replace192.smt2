(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun literal_8 () String)
(declare-fun b_literal_8 () Bool)
(declare-fun sigmaStar_453 () String)
(declare-fun b_sigmaStar_453 () Bool)
(declare-fun literal_10 () String)
(declare-fun b_literal_10 () Bool)
(declare-fun sigmaStar_055 () String)
(declare-fun b_sigmaStar_055 () Bool)
(declare-fun literal_18 () String)
(declare-fun b_literal_18 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun sigmaStar_safe_61 () String)
(declare-fun b_sigmaStar_safe_61 () Bool)
(declare-fun sigmaStar_safe_62 () String)
(declare-fun b_sigmaStar_safe_62 () Bool)
(declare-fun sigmaStar_1763 () String)
(declare-fun b_sigmaStar_1763 () Bool)
(declare-fun literal_26 () String)
(declare-fun b_literal_26 () Bool)
(declare-fun literal_27 () String)
(declare-fun b_literal_27 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_38 () String)
(declare-fun b_literal_38 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun literal_34 () String)
(declare-fun b_literal_34 () Bool)
(declare-fun literal_33 () String)
(declare-fun b_literal_33 () Bool)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_48 () String)
(declare-fun b_literal_48 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_50 () String)
(declare-fun b_literal_50 () Bool)
(declare-fun literal_51 () String)
(declare-fun b_literal_51 () Bool)
(declare-fun literal_28 () String)
(declare-fun b_literal_28 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_63 () String)
(declare-fun b_literal_63 () Bool)
(declare-fun literal_71 () String)
(declare-fun b_literal_71 () Bool)
(declare-fun literal_79 () String)
(declare-fun b_literal_79 () Bool)
(declare-fun literal_78 () String)
(declare-fun b_literal_78 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_76 () String)
(declare-fun b_literal_76 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_74 () String)
(declare-fun b_literal_74 () Bool)
(declare-fun literal_73 () String)
(declare-fun b_literal_73 () Bool)
(declare-fun literal_80 () String)
(declare-fun b_literal_80 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun x_20 () String)
(declare-fun b_x_20 () Bool)
(declare-fun x_21 () String)
(declare-fun b_x_21 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_24 () String)
(declare-fun b_x_24 () Bool)
(declare-fun x_25 () String)
(declare-fun b_x_25 () Bool)
(declare-fun x_30 () String)
(declare-fun b_x_30 () Bool)
(declare-fun x_39 () String)
(declare-fun b_x_39 () Bool)
(declare-fun x_40 () String)
(declare-fun b_x_40 () Bool)
(declare-fun x_41 () String)
(declare-fun b_x_41 () Bool)
(declare-fun x_42 () String)
(declare-fun b_x_42 () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_44 () String)
(declare-fun b_x_44 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_64 () String)
(declare-fun b_x_64 () Bool)
(declare-fun x_65 () String)
(declare-fun b_x_65 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_67 () String)
(declare-fun b_x_67 () Bool)
(declare-fun x_68 () String)
(declare-fun b_x_68 () Bool)
(declare-fun x_69 () String)
(declare-fun b_x_69 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_72 () String)
(declare-fun b_x_72 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_83 () String)
(declare-fun b_x_83 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_89 () String)
(declare-fun b_x_89 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)
(declare-fun sigmaStar_n3 () String)
(declare-fun b_sigmaStar_n3 () Bool)

(assert (str.in_re sigmaStar_safe_50 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_51 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_8 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_10 ""))

(assert (= literal_18 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_22 "\x20\x28\x61\x64\x6d\x69\x6e\x5f\x72\x69\x67\x68\x74\x73\x3d\x27"))
(assert (str.in_re sigmaStar_safe_61 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_62 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_26 "\x27\x29"))

(assert (= literal_27 "\x27"))

(assert (= literal_29 "\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x6e\x61\x6d\x65\x3d\x27"))

(assert (= literal_31 "\x73\x68\x6f\x75\x74\x5f\x6e\x61\x6d\x65\x3d\x27"))

(assert (= literal_38 "\x28\x73\x68\x6f\x75\x74\x5f\x69\x64\x29"))

(assert (= literal_37 "\x28\x2a\x29"))

(assert (= literal_36 "\x28\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x64\x29"))

(assert (= literal_35 "\x28\x2a\x29"))

(assert (= literal_34 "\x28\x2a\x29"))

(assert (= literal_33 "\x28\x2a\x29"))

(assert (= literal_32 "\x28\x2a\x29"))

(assert (= literal_48 "\x53\x45\x4c\x45\x43\x54\x20\x43\x6f\x75\x6e\x74"))

(assert (= literal_49 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x34\x27"))

(assert (= literal_50 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x32\x27"))

(assert (= literal_51 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x31\x27"))

(assert (= literal_28 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d\x27"))

(assert (= literal_52 "\x27"))

(assert (= literal_53 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x33\x27"))

(assert (= literal_54 "\x27"))

(assert (= literal_63 "\x20\x46\x52\x4f\x4d\x20"))

(assert (= literal_71 "\x20\x57\x48\x45\x52\x45\x20"))

(assert (= literal_79 "\x73\x68\x6f\x75\x74\x62\x6f\x78"))

(assert (= literal_78 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_77 "\x63\x6f\x6d\x6d\x65\x6e\x74\x73"))

(assert (= literal_76 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74"))

(assert (= literal_75 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_74 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_73 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_80 ""))
(assert (str.in_re atkPtn (re.++ (str.to_re "exec") (re.++ (re.++ (re.* (re.union (str.to_re "s") (str.to_re "+"))) (re.union (str.to_re "s") (str.to_re "+"))) (re.++ (re.union (str.to_re "s") (str.to_re "x")) (str.to_re "p"))))))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_9 sigmaStar_safe_50))

(assert (= x_9 sigmaStar_safe_51))



(assert (= x_12 (str.++ literal_8 sigmaStar_453)))


(assert (= x_13 x_9))

(assert (= x_13 literal_10))

(assert (= x_14 x_13))

(assert (= x_14 sigmaStar_055))

(assert (= x_20 (str.replace x_14 "." "' OR admin_rights='") ))



(assert (= x_21 (str.++ x_12 literal_18)))




(assert (= x_23 (str.++ literal_22 x_20)))


(assert (= x_24 sigmaStar_safe_61))

(assert (= x_24 sigmaStar_safe_62))



(assert (= x_25 (str.++ x_21 sigmaStar_1763)))




(assert (= x_30 (str.++ x_23 literal_26)))




(assert (= x_39 (str.++ x_25 literal_27)))




(assert (= x_40 (str.++ literal_29 x_24)))




(assert (= x_41 (str.++ literal_31 sigmaStar_n0)))


(assert (= x_42 literal_38))

(assert (= x_42 literal_37))

(assert (= x_43 x_42))

(assert (= x_43 literal_36))

(assert (= x_44 x_43))

(assert (= x_44 literal_35))

(assert (= x_45 x_44))

(assert (= x_45 literal_34))

(assert (= x_46 x_45))

(assert (= x_46 literal_33))

(assert (= x_47 x_46))

(assert (= x_47 literal_32))



(assert (= x_55 (str.++ literal_48 x_47)))




(assert (= x_56 (str.++ x_30 literal_49)))




(assert (= x_57 (str.++ sigmaStar_n1 literal_50)))




(assert (= x_58 (str.++ sigmaStar_n2 literal_51)))




(assert (= x_59 (str.++ literal_28 x_39)))




(assert (= x_60 (str.++ x_40 literal_52)))




(assert (= x_61 (str.++ sigmaStar_n3 literal_53)))




(assert (= x_62 (str.++ x_41 literal_54)))




(assert (= x_64 (str.++ x_55 literal_63)))


(assert (= x_65 x_62))

(assert (= x_65 x_61))

(assert (= x_66 x_65))

(assert (= x_66 x_60))

(assert (= x_67 x_66))

(assert (= x_67 x_59))

(assert (= x_68 x_67))

(assert (= x_68 x_58))

(assert (= x_69 x_68))

(assert (= x_69 x_57))

(assert (= x_70 x_69))

(assert (= x_70 x_56))



(assert (= x_72 (str.++ literal_71 x_70)))


(assert (= x_81 literal_79))

(assert (= x_81 literal_78))

(assert (= x_82 x_81))

(assert (= x_82 literal_77))

(assert (= x_83 x_82))

(assert (= x_83 literal_76))

(assert (= x_84 x_83))

(assert (= x_84 literal_75))

(assert (= x_85 x_84))

(assert (= x_85 literal_74))

(assert (= x_86 x_85))

(assert (= x_86 literal_73))

(assert (= x_87 x_72))

(assert (= x_87 literal_80))



(assert (= x_88 (str.++ x_64 x_86)))




(assert (= x_89 (str.++ x_88 x_87)))


(assert (= sink x_89))
(assert (= sink atk_sink))


(check-sat)
(exit)