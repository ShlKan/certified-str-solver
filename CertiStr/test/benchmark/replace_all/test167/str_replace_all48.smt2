(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun sigmaStar_052 () String)
(declare-fun b_sigmaStar_052 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_10 () String)
(declare-fun b_literal_10 () Bool)
(declare-fun sigmaStar_555 () String)
(declare-fun b_sigmaStar_555 () Bool)
(declare-fun literal_21 () String)
(declare-fun b_literal_21 () Bool)
(declare-fun sigmaStar_safe_60 () String)
(declare-fun b_sigmaStar_safe_60 () Bool)
(declare-fun sigmaStar_safe_61 () String)
(declare-fun b_sigmaStar_safe_61 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun sigmaStar_2063 () String)
(declare-fun b_sigmaStar_2063 () Bool)
(declare-fun literal_26 () String)
(declare-fun b_literal_26 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_28 () String)
(declare-fun b_literal_28 () Bool)
(declare-fun sigmaStar_168 () String)
(declare-fun b_sigmaStar_168 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun literal_38 () String)
(declare-fun b_literal_38 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun literal_34 () String)
(declare-fun b_literal_34 () Bool)
(declare-fun literal_33 () String)
(declare-fun b_literal_33 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_50 () String)
(declare-fun b_literal_50 () Bool)
(declare-fun literal_51 () String)
(declare-fun b_literal_51 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_55 () String)
(declare-fun b_literal_55 () Bool)
(declare-fun literal_64 () String)
(declare-fun b_literal_64 () Bool)
(declare-fun literal_72 () String)
(declare-fun b_literal_72 () Bool)
(declare-fun literal_80 () String)
(declare-fun b_literal_80 () Bool)
(declare-fun literal_79 () String)
(declare-fun b_literal_79 () Bool)
(declare-fun literal_78 () String)
(declare-fun b_literal_78 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_76 () String)
(declare-fun b_literal_76 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_74 () String)
(declare-fun b_literal_74 () Bool)
(declare-fun literal_81 () String)
(declare-fun b_literal_81 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_24 () String)
(declare-fun b_x_24 () Bool)
(declare-fun x_25 () String)
(declare-fun b_x_25 () Bool)
(declare-fun x_27 () String)
(declare-fun b_x_27 () Bool)
(declare-fun x_30 () String)
(declare-fun b_x_30 () Bool)
(declare-fun x_40 () String)
(declare-fun b_x_40 () Bool)
(declare-fun x_41 () String)
(declare-fun b_x_41 () Bool)
(declare-fun x_42 () String)
(declare-fun b_x_42 () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_44 () String)
(declare-fun b_x_44 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_63 () String)
(declare-fun b_x_63 () Bool)
(declare-fun x_65 () String)
(declare-fun b_x_65 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_67 () String)
(declare-fun b_x_67 () Bool)
(declare-fun x_68 () String)
(declare-fun b_x_68 () Bool)
(declare-fun x_69 () String)
(declare-fun b_x_69 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_71 () String)
(declare-fun b_x_71 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_83 () String)
(declare-fun b_x_83 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_89 () String)
(declare-fun b_x_89 () Bool)
(declare-fun x_90 () String)
(declare-fun b_x_90 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)

(assert (str.in_re sigmaStar_safe_50 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_51 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_11 ""))

(assert (= literal_10 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_21 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))
(assert (str.in_re sigmaStar_safe_60 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_61 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_22 "\x20\x28\x61\x64\x6d\x69\x6e\x5f\x72\x69\x67\x68\x74\x73\x3d\x27"))

(assert (= literal_26 "\x27\x29"))

(assert (= literal_29 "\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x74\x79\x70\x65\x3d\x27\x50\x27\x20\x41\x4e\x44\x20\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x74\x65\x6d\x5f\x69\x64\x3d\x27"))

(assert (= literal_31 "\x27"))

(assert (= literal_28 "\x61\x6c\x62\x75\x6d\x5f\x69\x64\x3d\x27"))

(assert (= literal_39 "\x28\x70\x68\x6f\x74\x6f\x5f\x69\x64\x29"))

(assert (= literal_38 "\x28\x2a\x29"))

(assert (= literal_37 "\x28\x2a\x29"))

(assert (= literal_36 "\x28\x2a\x29"))

(assert (= literal_35 "\x28\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x64\x29"))

(assert (= literal_34 "\x28\x2a\x29"))

(assert (= literal_33 "\x28\x2a\x29"))

(assert (= literal_49 "\x53\x45\x4c\x45\x43\x54\x20\x43\x6f\x75\x6e\x74"))

(assert (= literal_50 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x31\x27"))

(assert (= literal_51 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x32\x27"))

(assert (= literal_52 "\x27"))

(assert (= literal_53 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x33\x27"))

(assert (= literal_54 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x34\x27"))

(assert (= literal_32 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d\x27"))

(assert (= literal_55 "\x27"))

(assert (= literal_64 "\x20\x46\x52\x4f\x4d\x20"))

(assert (= literal_72 "\x20\x57\x48\x45\x52\x45\x20"))

(assert (= literal_80 "\x70\x68\x6f\x74\x6f\x73"))

(assert (= literal_79 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74"))

(assert (= literal_78 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_77 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_76 "\x63\x6f\x6d\x6d\x65\x6e\x74\x73"))

(assert (= literal_75 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_74 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_81 ""))
(assert (str.in_re atkPtn (str.to_re "' or 1=1 '")))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_9 sigmaStar_safe_50))

(assert (= x_9 sigmaStar_safe_51))

(assert (= x_12 x_9))

(assert (= x_12 sigmaStar_052))

(assert (= x_13 x_12))

(assert (= x_13 literal_11))



(assert (= x_17 (str.++ literal_10 sigmaStar_555)))


(assert (= x_19 (str.replace_all x_13 "." "' OR admin_rights='") ))



(assert (= x_23 (str.++ x_17 literal_21)))


(assert (= x_24 sigmaStar_safe_60))

(assert (= x_24 sigmaStar_safe_61))



(assert (= x_25 (str.++ literal_22 x_19)))




(assert (= x_27 (str.++ x_23 sigmaStar_2063)))




(assert (= x_30 (str.++ x_25 literal_26)))




(assert (= x_40 (str.++ literal_29 x_24)))




(assert (= x_41 (str.++ x_27 literal_31)))




(assert (= x_42 (str.++ literal_28 sigmaStar_168)))


(assert (= x_43 literal_39))

(assert (= x_43 literal_38))

(assert (= x_44 x_43))

(assert (= x_44 literal_37))

(assert (= x_45 x_44))

(assert (= x_45 literal_36))

(assert (= x_46 x_45))

(assert (= x_46 literal_35))

(assert (= x_47 x_46))

(assert (= x_47 literal_34))

(assert (= x_48 x_47))

(assert (= x_48 literal_33))



(assert (= x_56 (str.++ literal_49 x_48)))




(assert (= x_57 (str.++ x_30 literal_50)))




(assert (= x_58 (str.++ sigmaStar_n0 literal_51)))




(assert (= x_59 (str.++ x_40 literal_52)))




(assert (= x_60 (str.++ sigmaStar_n1 literal_53)))




(assert (= x_61 (str.++ sigmaStar_n2 literal_54)))




(assert (= x_62 (str.++ literal_32 x_41)))




(assert (= x_63 (str.++ x_42 literal_55)))




(assert (= x_65 (str.++ x_56 literal_64)))


(assert (= x_66 x_63))

(assert (= x_66 x_62))

(assert (= x_67 x_66))

(assert (= x_67 x_61))

(assert (= x_68 x_67))

(assert (= x_68 x_60))

(assert (= x_69 x_68))

(assert (= x_69 x_59))

(assert (= x_70 x_69))

(assert (= x_70 x_58))

(assert (= x_71 x_70))

(assert (= x_71 x_57))



(assert (= x_73 (str.++ literal_72 x_71)))


(assert (= x_82 literal_80))

(assert (= x_82 literal_79))

(assert (= x_83 x_82))

(assert (= x_83 literal_78))

(assert (= x_84 x_83))

(assert (= x_84 literal_77))

(assert (= x_85 x_84))

(assert (= x_85 literal_76))

(assert (= x_86 x_85))

(assert (= x_86 literal_75))

(assert (= x_87 x_86))

(assert (= x_87 literal_74))

(assert (= x_88 x_73))

(assert (= x_88 literal_81))



(assert (= x_89 (str.++ x_65 x_87)))




(assert (= x_90 (str.++ x_89 x_88)))


(assert (= sink x_90))
(assert (= sink atk_sink))


(check-sat)
(exit)