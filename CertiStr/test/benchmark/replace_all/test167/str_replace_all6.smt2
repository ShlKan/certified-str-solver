(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun literal_1 () String)
(declare-fun b_literal_1 () Bool)
(declare-fun sigmaStar_749 () String)
(declare-fun b_sigmaStar_749 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_15 () String)
(declare-fun b_literal_15 () Bool)
(declare-fun literal_18 () String)
(declare-fun b_literal_18 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun literal_30 () String)
(declare-fun b_literal_30 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_25 () String)
(declare-fun b_literal_25 () Bool)
(declare-fun sigmaStar_757 () String)
(declare-fun b_sigmaStar_757 () Bool)
(declare-fun literal_27 () String)
(declare-fun b_literal_27 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun sigmaStar_762 () String)
(declare-fun b_sigmaStar_762 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun sigmaStar_764 () String)
(declare-fun b_sigmaStar_764 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_50 () String)
(declare-fun b_literal_50 () Bool)
(declare-fun literal_46 () String)
(declare-fun b_literal_46 () Bool)
(declare-fun sigmaStar_270 () String)
(declare-fun b_sigmaStar_270 () Bool)
(declare-fun literal_71 () String)
(declare-fun b_literal_71 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_28 () String)
(declare-fun b_x_28 () Bool)
(declare-fun x_33 () String)
(declare-fun b_x_33 () Bool)
(declare-fun x_34 () String)
(declare-fun b_x_34 () Bool)
(declare-fun x_38 () String)
(declare-fun b_x_38 () Bool)
(declare-fun x_39 () String)
(declare-fun b_x_39 () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_44 () String)
(declare-fun b_x_44 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_51 () String)
(declare-fun b_x_51 () Bool)
(declare-fun x_52 () String)
(declare-fun b_x_52 () Bool)
(declare-fun x_53 () String)
(declare-fun b_x_53 () Bool)
(declare-fun x_54 () String)
(declare-fun b_x_54 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_72 () String)
(declare-fun b_x_72 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)


(assert (= literal_1 "\x44\x42\x20\x63\x61\x63\x68\x65\x5f\x66\x69\x6c\x74\x65\x72\x73\x20\x65\x6e\x74\x72\x79\x20\x66\x6f\x72\x20"))

(assert (= literal_11 "\x5c\x6e"))

(assert (= literal_15 "\x69\x64\x20\x3d\x20\x5c\x6e"))

(assert (= literal_18 "\x66\x69\x6c\x74\x65\x72\x20\x3d\x20\x5c\x6e"))

(assert (= literal_22 "\x76\x65\x72\x73\x69\x6f\x6e\x20\x3d\x20\x5c\x6e"))

(assert (= literal_30 "\x31"))

(assert (= literal_29 "\x30"))

(assert (= literal_25 "\x44\x65\x6c\x65\x74\x69\x6e\x67\x20\x44\x42\x20\x63\x61\x63\x68\x65\x5f\x66\x69\x6c\x74\x65\x72\x73\x20\x65\x6e\x74\x72\x79\x20\x66\x6f\x72\x20"))

(assert (= literal_27 "\x6d\x64\x35\x6b\x65\x79\x20\x3d\x20\x5c\x6e"))

(assert (= literal_31 "\x4e\x75\x6d\x62\x65\x72\x20\x6f\x66\x20\x72\x65\x63\x6f\x72\x64\x73\x20\x64\x65\x6c\x65\x74\x65\x64\x20\x3d\x20"))

(assert (= literal_40 "\x5c\x6e"))

(assert (= literal_35 "\x44\x42\x20\x63\x61\x63\x68\x65\x5f\x66\x69\x6c\x74\x65\x72\x73\x20\x65\x6e\x74\x72\x79\x20\x66\x6f\x72\x20"))

(assert (= literal_36 "\x43\x6f\x75\x6c\x64\x20\x6e\x6f\x74\x20\x64\x65\x6c\x65\x74\x65\x20\x44\x42\x20\x63\x61\x63\x68\x65\x5f\x66\x69\x6c\x74\x65\x72\x73\x20\x65\x6e\x74\x72\x79\x20\x66\x6f\x72\x20"))

(assert (= literal_37 "\x72\x61\x77\x74\x65\x78\x74\x20\x3d\x20\x5c\x6e"))

(assert (= literal_42 "\x5c\x6e"))

(assert (= literal_49 "\x20\x6e\x6f\x74\x20\x66\x6f\x75\x6e\x64\x5c\x6e"))

(assert (= literal_50 "\x5c\x6e\x62\x65\x63\x61\x75\x73\x65\x20\x69\x74\x20\x63\x6f\x75\x6c\x64\x20\x6e\x6f\x74\x20\x62\x65\x20\x66\x6f\x75\x6e\x64\x2e\x5c\x6e"))

(assert (= literal_46 "\x74\x69\x6d\x65\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x3d\x20\x5c\x6e"))

(assert (= literal_71 "\x5c\x6e\x5c\x6e"))
(assert (str.in_re atkPtn (str.to_re "livescript:")))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))


(assert (= x_9 (str.++ literal_1 sigmaStar_749)))




(assert (= x_13 (str.++ x_9 literal_11)))




(assert (= x_19 (str.++ x_13 literal_15)))




(assert (= x_23 (str.++ x_19 literal_18)))




(assert (= x_28 (str.++ x_23 literal_22)))


(assert (= x_33 literal_30))

(assert (= x_33 literal_29))



(assert (= x_34 (str.++ literal_25 sigmaStar_757)))




(assert (= x_38 (str.++ x_28 literal_27)))




(assert (= x_39 (str.++ literal_31 x_33)))




(assert (= x_43 (str.++ x_34 literal_40)))




(assert (= x_44 (str.++ literal_35 sigmaStar_762)))




(assert (= x_45 (str.++ literal_36 sigmaStar_764)))




(assert (= x_47 (str.++ x_38 literal_37)))




(assert (= x_48 (str.++ x_39 literal_42)))




(assert (= x_51 (str.++ x_44 literal_49)))




(assert (= x_52 (str.++ x_45 literal_50)))




(assert (= x_53 (str.++ x_47 literal_46)))




(assert (= x_54 (str.++ x_43 x_48)))


(assert (= x_55 x_52))

(assert (= x_55 sigmaStar_270))

(assert (= x_56 x_55))

(assert (= x_56 x_51))

(assert (= x_57 x_56))

(assert (= x_57 x_54))

(assert (= x_58 x_57))

(assert (= x_58 x_53))

(assert (= x_62 (str.replace_all x_58 "<" "&lt;") ))

(assert (= x_66 (str.replace_all x_62 ">" "&gt;") ))

(assert (= x_70 (str.replace_all x_66 """" "&quot;") ))



(assert (= x_72 (str.++ x_70 literal_71)))


(assert (= sink x_72))
(assert (= sink atk_sink))


(check-sat)
(exit)