(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_safe_50 () String)
(declare-fun b_sigmaStar_safe_50 () Bool)
(declare-fun sigmaStar_safe_51 () String)
(declare-fun b_sigmaStar_safe_51 () Bool)
(declare-fun literal_8 () String)
(declare-fun b_literal_8 () Bool)
(declare-fun sigmaStar_553 () String)
(declare-fun b_sigmaStar_553 () Bool)
(declare-fun sigmaStar_054 () String)
(declare-fun b_sigmaStar_054 () Bool)
(declare-fun literal_10 () String)
(declare-fun b_literal_10 () Bool)
(declare-fun literal_18 () String)
(declare-fun b_literal_18 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun sigmaStar_1761 () String)
(declare-fun b_sigmaStar_1761 () Bool)
(declare-fun literal_25 () String)
(declare-fun b_literal_25 () Bool)
(declare-fun literal_26 () String)
(declare-fun b_literal_26 () Bool)
(declare-fun literal_44 () String)
(declare-fun b_literal_44 () Bool)
(declare-fun literal_43 () String)
(declare-fun b_literal_43 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_41 () String)
(declare-fun b_literal_41 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun literal_38 () String)
(declare-fun b_literal_38 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun literal_34 () String)
(declare-fun b_literal_34 () Bool)
(declare-fun literal_33 () String)
(declare-fun b_literal_33 () Bool)
(declare-fun literal_32 () String)
(declare-fun b_literal_32 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_30 () String)
(declare-fun b_literal_30 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_61 () String)
(declare-fun b_literal_61 () Bool)
(declare-fun literal_27 () String)
(declare-fun b_literal_27 () Bool)
(declare-fun literal_62 () String)
(declare-fun b_literal_62 () Bool)
(declare-fun literal_63 () String)
(declare-fun b_literal_63 () Bool)
(declare-fun literal_64 () String)
(declare-fun b_literal_64 () Bool)
(declare-fun literal_65 () String)
(declare-fun b_literal_65 () Bool)
(declare-fun literal_72 () String)
(declare-fun b_literal_72 () Bool)
(declare-fun literal_80 () String)
(declare-fun b_literal_80 () Bool)
(declare-fun literal_79 () String)
(declare-fun b_literal_79 () Bool)
(declare-fun literal_78 () String)
(declare-fun b_literal_78 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_76 () String)
(declare-fun b_literal_76 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_74 () String)
(declare-fun b_literal_74 () Bool)
(declare-fun literal_73 () String)
(declare-fun b_literal_73 () Bool)
(declare-fun literal_94 () String)
(declare-fun b_literal_94 () Bool)
(declare-fun literal_111 () String)
(declare-fun b_literal_111 () Bool)
(declare-fun literal_110 () String)
(declare-fun b_literal_110 () Bool)
(declare-fun literal_109 () String)
(declare-fun b_literal_109 () Bool)
(declare-fun literal_108 () String)
(declare-fun b_literal_108 () Bool)
(declare-fun literal_107 () String)
(declare-fun b_literal_107 () Bool)
(declare-fun literal_106 () String)
(declare-fun b_literal_106 () Bool)
(declare-fun literal_105 () String)
(declare-fun b_literal_105 () Bool)
(declare-fun literal_104 () String)
(declare-fun b_literal_104 () Bool)
(declare-fun literal_103 () String)
(declare-fun b_literal_103 () Bool)
(declare-fun literal_102 () String)
(declare-fun b_literal_102 () Bool)
(declare-fun literal_101 () String)
(declare-fun b_literal_101 () Bool)
(declare-fun literal_100 () String)
(declare-fun b_literal_100 () Bool)
(declare-fun literal_99 () String)
(declare-fun b_literal_99 () Bool)
(declare-fun literal_98 () String)
(declare-fun b_literal_98 () Bool)
(declare-fun literal_97 () String)
(declare-fun b_literal_97 () Bool)
(declare-fun literal_96 () String)
(declare-fun b_literal_96 () Bool)
(declare-fun literal_112 () String)
(declare-fun b_literal_112 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_12 () String)
(declare-fun b_x_12 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_14 () String)
(declare-fun b_x_14 () Bool)
(declare-fun x_20 () String)
(declare-fun b_x_20 () Bool)
(declare-fun x_21 () String)
(declare-fun b_x_21 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_24 () String)
(declare-fun b_x_24 () Bool)
(declare-fun x_28 () String)
(declare-fun b_x_28 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_49 () String)
(declare-fun b_x_49 () Bool)
(declare-fun x_50 () String)
(declare-fun b_x_50 () Bool)
(declare-fun x_51 () String)
(declare-fun b_x_51 () Bool)
(declare-fun x_52 () String)
(declare-fun b_x_52 () Bool)
(declare-fun x_53 () String)
(declare-fun b_x_53 () Bool)
(declare-fun x_54 () String)
(declare-fun b_x_54 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_67 () String)
(declare-fun b_x_67 () Bool)
(declare-fun x_68 () String)
(declare-fun b_x_68 () Bool)
(declare-fun x_69 () String)
(declare-fun b_x_69 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_71 () String)
(declare-fun b_x_71 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_83 () String)
(declare-fun b_x_83 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_89 () String)
(declare-fun b_x_89 () Bool)
(declare-fun x_90 () String)
(declare-fun b_x_90 () Bool)
(declare-fun x_91 () String)
(declare-fun b_x_91 () Bool)
(declare-fun x_92 () String)
(declare-fun b_x_92 () Bool)
(declare-fun x_93 () String)
(declare-fun b_x_93 () Bool)
(declare-fun x_95 () String)
(declare-fun b_x_95 () Bool)
(declare-fun x_113 () String)
(declare-fun b_x_113 () Bool)
(declare-fun x_114 () String)
(declare-fun b_x_114 () Bool)
(declare-fun x_115 () String)
(declare-fun b_x_115 () Bool)
(declare-fun x_116 () String)
(declare-fun b_x_116 () Bool)
(declare-fun x_117 () String)
(declare-fun b_x_117 () Bool)
(declare-fun x_118 () String)
(declare-fun b_x_118 () Bool)
(declare-fun x_119 () String)
(declare-fun b_x_119 () Bool)
(declare-fun x_120 () String)
(declare-fun b_x_120 () Bool)
(declare-fun x_121 () String)
(declare-fun b_x_121 () Bool)
(declare-fun x_122 () String)
(declare-fun b_x_122 () Bool)
(declare-fun x_123 () String)
(declare-fun b_x_123 () Bool)
(declare-fun x_124 () String)
(declare-fun b_x_124 () Bool)
(declare-fun x_125 () String)
(declare-fun b_x_125 () Bool)
(declare-fun x_126 () String)
(declare-fun b_x_126 () Bool)
(declare-fun x_127 () String)
(declare-fun b_x_127 () Bool)
(declare-fun x_128 () String)
(declare-fun b_x_128 () Bool)
(declare-fun x_129 () String)
(declare-fun b_x_129 () Bool)
(declare-fun x_130 () String)
(declare-fun b_x_130 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)

(assert (str.in_re sigmaStar_safe_50 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))
(assert (str.in_re sigmaStar_safe_51 (re.* (re.union (re.range "0" "9") (re.union (re.range "a" "z") (re.range "A" "Z"))))))

(assert (= literal_8 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_10 ""))

(assert (= literal_18 "\x20\x4f\x52\x20\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d"))

(assert (= literal_22 "\x20\x28\x61\x64\x6d\x69\x6e\x5f\x72\x69\x67\x68\x74\x73\x3d\x27"))

(assert (= literal_25 "\x27\x29"))

(assert (= literal_26 "\x27"))

(assert (= literal_44 "\x28\x73\x75\x62\x6d\x69\x74\x5f\x69\x64\x29"))

(assert (= literal_43 "\x28\x73\x75\x62\x6d\x69\x74\x5f\x69\x64\x29"))

(assert (= literal_42 "\x28\x63\x6f\x6d\x6d\x65\x6e\x74\x5f\x69\x64\x29"))

(assert (= literal_41 "\x28\x2a\x29"))

(assert (= literal_40 "\x28\x73\x75\x62\x6d\x69\x74\x5f\x69\x64\x29"))

(assert (= literal_39 "\x28\x70\x68\x6f\x74\x6f\x5f\x69\x64\x29"))

(assert (= literal_38 "\x28\x75\x73\x65\x72\x5f\x69\x64\x29"))

(assert (= literal_37 "\x28\x73\x75\x62\x6d\x69\x74\x5f\x69\x64\x29"))

(assert (= literal_36 "\x28\x73\x68\x6f\x75\x74\x5f\x69\x64\x29"))

(assert (= literal_35 "\x28\x70\x6f\x73\x74\x5f\x69\x64\x29"))

(assert (= literal_34 "\x28\x2a\x29"))

(assert (= literal_33 "\x28\x2a\x29"))

(assert (= literal_32 "\x28\x2a\x29"))

(assert (= literal_31 "\x28\x75\x73\x65\x72\x5f\x69\x64\x29"))

(assert (= literal_30 "\x28\x75\x73\x65\x72\x5f\x69\x64\x29"))

(assert (= literal_29 "\x28\x2a\x29"))

(assert (= literal_61 "\x53\x45\x4c\x45\x43\x54\x20\x43\x6f\x75\x6e\x74"))

(assert (= literal_27 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74\x5f\x69\x70\x3d\x27"))

(assert (= literal_62 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x31\x27"))

(assert (= literal_63 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x34\x27"))

(assert (= literal_64 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x32\x27"))

(assert (= literal_65 "\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x6c\x69\x6e\x6b\x21\x3d\x27\x72\x65\x73\x65\x72\x76\x65\x64\x27\x20\x41\x4e\x44\x20\x61\x64\x6d\x69\x6e\x5f\x70\x61\x67\x65\x3d\x27\x33\x27"))

(assert (= literal_72 "\x20\x46\x52\x4f\x4d\x20"))

(assert (= literal_80 "\x73\x75\x62\x6d\x69\x74\x5f\x74\x79\x70\x65\x3d\x27\x61\x27"))

(assert (= literal_79 "\x73\x75\x62\x6d\x69\x74\x5f\x74\x79\x70\x65\x3d\x27\x70\x27"))

(assert (= literal_78 "\x73\x75\x62\x6d\x69\x74\x5f\x74\x79\x70\x65\x3d\x27\x6e\x27"))

(assert (= literal_77 "\x75\x73\x65\x72\x5f\x73\x74\x61\x74\x75\x73\x3c\x3d\x27\x31\x27"))

(assert (= literal_76 "\x73\x75\x62\x6d\x69\x74\x5f\x74\x79\x70\x65\x3d\x27\x6c\x27"))

(assert (= literal_75 "\x75\x73\x65\x72\x5f\x73\x74\x61\x74\x75\x73\x3d\x27\x32\x27"))

(assert (= literal_74 "\x75\x73\x65\x72\x5f\x73\x74\x61\x74\x75\x73\x3d\x27\x31\x27"))

(assert (= literal_73 ""))

(assert (= literal_94 "\x20\x57\x48\x45\x52\x45\x20"))

(assert (= literal_111 "\x73\x75\x62\x6d\x69\x73\x73\x69\x6f\x6e\x73"))

(assert (= literal_110 "\x73\x75\x62\x6d\x69\x73\x73\x69\x6f\x6e\x73"))

(assert (= literal_109 "\x63\x6f\x6d\x6d\x65\x6e\x74\x73"))

(assert (= literal_108 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_107 "\x73\x75\x62\x6d\x69\x73\x73\x69\x6f\x6e\x73"))

(assert (= literal_106 "\x70\x68\x6f\x74\x6f\x73"))

(assert (= literal_105 "\x75\x73\x65\x72\x73"))

(assert (= literal_104 "\x73\x75\x62\x6d\x69\x73\x73\x69\x6f\x6e\x73"))

(assert (= literal_103 "\x73\x68\x6f\x75\x74\x62\x6f\x78"))

(assert (= literal_102 "\x70\x6f\x73\x74\x73"))

(assert (= literal_101 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_100 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_99 "\x61\x64\x6d\x69\x6e"))

(assert (= literal_98 "\x75\x73\x65\x72\x73"))

(assert (= literal_97 "\x75\x73\x65\x72\x73"))

(assert (= literal_96 "\x62\x6c\x61\x63\x6b\x6c\x69\x73\x74"))

(assert (= literal_112 ""))
(assert (str.in_re atkPtn (str.to_re "' or 1=1 '")))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_9 sigmaStar_safe_50))

(assert (= x_9 sigmaStar_safe_51))



(assert (= x_12 (str.++ literal_8 sigmaStar_553)))


(assert (= x_13 sigmaStar_054))

(assert (= x_13 x_9))

(assert (= x_14 x_13))

(assert (= x_14 literal_10))

(assert (= x_20 (str.replace_all x_14 "." "' OR admin_rights='") ))



(assert (= x_21 (str.++ x_12 literal_18)))




(assert (= x_23 (str.++ literal_22 x_20)))




(assert (= x_24 (str.++ x_21 sigmaStar_1761)))




(assert (= x_28 (str.++ x_23 literal_25)))




(assert (= x_45 (str.++ x_24 literal_26)))


(assert (= x_46 literal_44))

(assert (= x_46 literal_43))

(assert (= x_47 x_46))

(assert (= x_47 literal_42))

(assert (= x_48 x_47))

(assert (= x_48 literal_41))

(assert (= x_49 x_48))

(assert (= x_49 literal_40))

(assert (= x_50 x_49))

(assert (= x_50 literal_39))

(assert (= x_51 x_50))

(assert (= x_51 literal_38))

(assert (= x_52 x_51))

(assert (= x_52 literal_37))

(assert (= x_53 x_52))

(assert (= x_53 literal_36))

(assert (= x_54 x_53))

(assert (= x_54 literal_35))

(assert (= x_55 x_54))

(assert (= x_55 literal_34))

(assert (= x_56 x_55))

(assert (= x_56 literal_33))

(assert (= x_57 x_56))

(assert (= x_57 literal_32))

(assert (= x_58 x_57))

(assert (= x_58 literal_31))

(assert (= x_59 x_58))

(assert (= x_59 literal_30))

(assert (= x_60 x_59))

(assert (= x_60 literal_29))



(assert (= x_66 (str.++ literal_61 x_60)))




(assert (= x_67 (str.++ literal_27 x_45)))




(assert (= x_68 (str.++ x_28 literal_62)))




(assert (= x_69 (str.++ sigmaStar_n0 literal_63)))




(assert (= x_70 (str.++ sigmaStar_n1 literal_64)))




(assert (= x_71 (str.++ sigmaStar_n2 literal_65)))




(assert (= x_81 (str.++ x_66 literal_72)))


(assert (= x_82 literal_80))

(assert (= x_82 literal_79))

(assert (= x_83 x_82))

(assert (= x_83 x_71))

(assert (= x_84 x_83))

(assert (= x_84 literal_78))

(assert (= x_85 x_84))

(assert (= x_85 literal_77))

(assert (= x_86 x_85))

(assert (= x_86 literal_76))

(assert (= x_87 x_86))

(assert (= x_87 x_70))

(assert (= x_88 x_87))

(assert (= x_88 x_69))

(assert (= x_89 x_88))

(assert (= x_89 x_68))

(assert (= x_90 x_89))

(assert (= x_90 literal_75))

(assert (= x_91 x_90))

(assert (= x_91 literal_74))

(assert (= x_92 x_91))

(assert (= x_92 x_67))

(assert (= x_93 x_92))

(assert (= x_93 literal_73))



(assert (= x_95 (str.++ literal_94 x_93)))


(assert (= x_113 literal_111))

(assert (= x_113 literal_110))

(assert (= x_114 x_113))

(assert (= x_114 literal_109))

(assert (= x_115 x_114))

(assert (= x_115 literal_108))

(assert (= x_116 x_115))

(assert (= x_116 literal_107))

(assert (= x_117 x_116))

(assert (= x_117 literal_106))

(assert (= x_118 x_117))

(assert (= x_118 literal_105))

(assert (= x_119 x_118))

(assert (= x_119 literal_104))

(assert (= x_120 x_119))

(assert (= x_120 literal_103))

(assert (= x_121 x_120))

(assert (= x_121 literal_102))

(assert (= x_122 x_121))

(assert (= x_122 literal_101))

(assert (= x_123 x_122))

(assert (= x_123 literal_100))

(assert (= x_124 x_123))

(assert (= x_124 literal_99))

(assert (= x_125 x_124))

(assert (= x_125 literal_98))

(assert (= x_126 x_125))

(assert (= x_126 literal_97))

(assert (= x_127 x_126))

(assert (= x_127 literal_96))

(assert (= x_128 literal_112))

(assert (= x_128 x_95))



(assert (= x_129 (str.++ x_81 x_127)))




(assert (= x_130 (str.++ x_129 x_128)))


(assert (= sink x_130))
(assert (= sink atk_sink))


(check-sat)
(exit)