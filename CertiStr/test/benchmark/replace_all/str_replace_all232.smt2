(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun sigmaStar_2661 () String)
(declare-fun b_sigmaStar_2661 () Bool)
(declare-fun sigmaStar_562 () String)
(declare-fun b_sigmaStar_562 () Bool)
(declare-fun sigmaStar_364 () String)
(declare-fun b_sigmaStar_364 () Bool)
(declare-fun literal_39 () String)
(declare-fun b_literal_39 () Bool)
(declare-fun sigmaStar_166 () String)
(declare-fun b_sigmaStar_166 () Bool)
(declare-fun sigmaStar_067 () String)
(declare-fun b_sigmaStar_067 () Bool)
(declare-fun sigmaStar_468 () String)
(declare-fun b_sigmaStar_468 () Bool)
(declare-fun literal_45 () String)
(declare-fun b_literal_45 () Bool)
(declare-fun literal_48 () String)
(declare-fun b_literal_48 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_51 () String)
(declare-fun b_literal_51 () Bool)
(declare-fun literal_59 () String)
(declare-fun b_literal_59 () Bool)
(declare-fun literal_63 () String)
(declare-fun b_literal_63 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_67 () String)
(declare-fun b_literal_67 () Bool)
(declare-fun literal_68 () String)
(declare-fun b_literal_68 () Bool)
(declare-fun literal_70 () String)
(declare-fun b_literal_70 () Bool)
(declare-fun sigmaStar_6982 () String)
(declare-fun b_sigmaStar_6982 () Bool)
(declare-fun sigmaStar_6983 () String)
(declare-fun b_sigmaStar_6983 () Bool)
(declare-fun sigmaStar_6984 () String)
(declare-fun b_sigmaStar_6984 () Bool)
(declare-fun sigmaStar_6985 () String)
(declare-fun b_sigmaStar_6985 () Bool)
(declare-fun sigmaStar_6986 () String)
(declare-fun b_sigmaStar_6986 () Bool)
(declare-fun literal_83 () String)
(declare-fun b_literal_83 () Bool)
(declare-fun literal_84 () String)
(declare-fun b_literal_84 () Bool)
(declare-fun literal_91 () String)
(declare-fun b_literal_91 () Bool)
(declare-fun literal_92 () String)
(declare-fun b_literal_92 () Bool)
(declare-fun literal_95 () String)
(declare-fun b_literal_95 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_52 () String)
(declare-fun b_x_52 () Bool)
(declare-fun x_53 () String)
(declare-fun b_x_53 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_60 () String)
(declare-fun b_x_60 () Bool)
(declare-fun x_61 () String)
(declare-fun b_x_61 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_64 () String)
(declare-fun b_x_64 () Bool)
(declare-fun x_71 () String)
(declare-fun b_x_71 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_74 () String)
(declare-fun b_x_74 () Bool)
(declare-fun x_75 () String)
(declare-fun b_x_75 () Bool)
(declare-fun x_76 () String)
(declare-fun b_x_76 () Bool)
(declare-fun x_77 () String)
(declare-fun b_x_77 () Bool)
(declare-fun x_78 () String)
(declare-fun b_x_78 () Bool)
(declare-fun x_79 () String)
(declare-fun b_x_79 () Bool)
(declare-fun x_80 () String)
(declare-fun b_x_80 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_82 () String)
(declare-fun b_x_82 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_86 () String)
(declare-fun b_x_86 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_89 () String)
(declare-fun b_x_89 () Bool)
(declare-fun x_90 () String)
(declare-fun b_x_90 () Bool)
(declare-fun x_93 () String)
(declare-fun b_x_93 () Bool)
(declare-fun x_94 () String)
(declare-fun b_x_94 () Bool)
(declare-fun x_96 () String)
(declare-fun b_x_96 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)
(declare-fun sigmaStar_n0 () String)
(declare-fun b_sigmaStar_n0 () Bool)
(declare-fun sigmaStar_n1 () String)
(declare-fun b_sigmaStar_n1 () Bool)
(declare-fun sigmaStar_n2 () String)
(declare-fun b_sigmaStar_n2 () Bool)
(declare-fun sigmaStar_n3 () String)
(declare-fun b_sigmaStar_n3 () Bool)


(assert (= literal_37 "\x2f\x2f"))

(assert (= literal_39 "\x20\x2b\x2b\x20\x2d\x65\x20\x20\x5c\x22"))

(assert (= literal_45 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x20\x2d\x65\x20"))

(assert (= literal_48 "\x5c\x22\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x66\x72\x65\x65\x62\x73\x64\x5c\x22\x20\x2d\x65\x20\x5c\x22"))

(assert (= literal_49 "\x5c\x22\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x64\x61\x72\x77\x69\x6e\x5c\x22\x20\x2d\x65\x20\x5c\x22"))

(assert (= literal_51 "\x5c\x22\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x6c\x69\x6e\x75\x78\x5c\x22\x20\x2d\x65\x20\x5c\x22"))

(assert (= literal_59 "\x5c\x22\x20\x2d\x2d\x20"))

(assert (= literal_63 "\x20\x2d\x2d\x20"))

(assert (= literal_54 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x65\x78\x65"))

(assert (= literal_67 "\x5c\x22\x20"))

(assert (= literal_68 "\x5c\x22\x20\x2d\x2d\x20"))

(assert (= literal_70 "\x5c\x22\x20\x2d\x2d\x20"))

(assert (= literal_83 ""))

(assert (= literal_84 "\x54\x68\x65\x20\x73\x68\x65\x6c\x6c\x20\x63\x6f\x6d\x6d\x61\x6e\x64\x3c\x62\x72\x20\x2f\x3e"))

(assert (= literal_91 "\x3c\x62\x72\x20\x2f\x3e\x72\x65\x74\x75\x72\x6e\x65\x64\x20\x73\x74\x61\x74\x75\x73\x20\x3d\x20"))

(assert (= literal_92 ""))

(assert (= literal_95 "\x3c\x62\x72\x20\x2f\x3e\x5c\x6e"))
(assert (str.in_re atkPtn (re.++ (str.to_re "\\"";") (re.++ (re.* re.allchar) (str.to_re "//")))))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))


(assert (= x_43 (str.++ literal_37 sigmaStar_2661)))


(assert (= x_46 sigmaStar_562))

(assert (= x_46 x_43))

(assert (= x_52 sigmaStar_364))

(assert (= x_52 sigmaStar_n0))



(assert (= x_53 (str.++ literal_39 x_46)))


(assert (= x_55 sigmaStar_166))

(assert (= x_55 sigmaStar_n1))

(assert (= x_56 sigmaStar_067))

(assert (= x_56 sigmaStar_n2))

(assert (= x_57 sigmaStar_468))

(assert (= x_57 sigmaStar_n3))



(assert (= x_58 (str.++ literal_45 x_52)))




(assert (= x_60 (str.++ literal_48 x_55)))




(assert (= x_61 (str.++ literal_49 x_56)))




(assert (= x_62 (str.++ literal_51 x_57)))




(assert (= x_64 (str.++ x_53 literal_59)))




(assert (= x_71 (str.++ x_58 literal_63)))


(assert (= x_73 (str.replace_all literal_54 " " "^ ") ))



(assert (= x_74 (str.++ x_60 literal_67)))




(assert (= x_75 (str.++ x_61 literal_68)))




(assert (= x_76 (str.++ x_62 literal_70)))




(assert (= x_77 (str.++ x_64 sigmaStar_6982)))




(assert (= x_78 (str.++ x_71 sigmaStar_6983)))




(assert (= x_79 (str.++ x_74 sigmaStar_6984)))




(assert (= x_80 (str.++ x_75 sigmaStar_6985)))




(assert (= x_81 (str.++ x_76 sigmaStar_6986)))




(assert (= x_82 (str.++ x_73 x_77)))


(assert (= x_85 literal_83))

(assert (= x_85 x_81))

(assert (= x_86 x_85))

(assert (= x_86 x_80))

(assert (= x_87 x_86))

(assert (= x_87 x_79))

(assert (= x_88 x_87))

(assert (= x_88 x_82))

(assert (= x_89 x_88))

(assert (= x_89 x_78))



(assert (= x_90 (str.++ literal_84 x_89)))




(assert (= x_93 (str.++ x_90 literal_91)))




(assert (= x_94 (str.++ x_93 literal_92)))




(assert (= x_96 (str.++ x_94 literal_95)))


(assert (= sink x_96))
(assert (= sink atk_sink))


(check-sat)
(exit)