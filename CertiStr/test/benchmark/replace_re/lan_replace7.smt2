(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Oliver Markgraf
Generator: Stranger
Generated on: 2023-04-03
Application: Real Web Applications
Target solver: SLENT
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun sigmaStar_448 () String)
(declare-fun b_sigmaStar_448 () Bool)
(declare-fun sigmaStar_252 () String)
(declare-fun b_sigmaStar_252 () Bool)
(declare-fun sigmaStar_362 () String)
(declare-fun b_sigmaStar_362 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_52 () String)
(declare-fun b_literal_52 () Bool)
(declare-fun literal_47 () String)
(declare-fun b_literal_47 () Bool)
(declare-fun literal_53 () String)
(declare-fun b_literal_53 () Bool)
(declare-fun literal_54 () String)
(declare-fun b_literal_54 () Bool)
(declare-fun literal_58 () String)
(declare-fun b_literal_58 () Bool)
(declare-fun literal_65 () String)
(declare-fun b_literal_65 () Bool)
(declare-fun literal_67 () String)
(declare-fun b_literal_67 () Bool)
(declare-fun literal_68 () String)
(declare-fun b_literal_68 () Bool)
(declare-fun literal_69 () String)
(declare-fun b_literal_69 () Bool)
(declare-fun sigmaStar_181 () String)
(declare-fun b_sigmaStar_181 () Bool)
(declare-fun literal_75 () String)
(declare-fun b_literal_75 () Bool)
(declare-fun literal_77 () String)
(declare-fun b_literal_77 () Bool)
(declare-fun literal_83 () String)
(declare-fun b_literal_83 () Bool)
(declare-fun sigmaStar_585 () String)
(declare-fun b_sigmaStar_585 () Bool)
(declare-fun literal_90 () String)
(declare-fun b_literal_90 () Bool)
(declare-fun sigmaStar_087 () String)
(declare-fun b_sigmaStar_087 () Bool)
(declare-fun literal_89 () String)
(declare-fun b_literal_89 () Bool)
(declare-fun literal_96 () String)
(declare-fun b_literal_96 () Bool)
(declare-fun sigmaStar_690 () String)
(declare-fun b_sigmaStar_690 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_10 () String)
(declare-fun b_x_10 () Bool)
(declare-fun x_17 () String)
(declare-fun b_x_17 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_34 () String)
(declare-fun b_x_34 () Bool)
(declare-fun x_37 () String)
(declare-fun b_x_37 () Bool)
(declare-fun x_41 () String)
(declare-fun b_x_41 () Bool)
(declare-fun x_46 () String)
(declare-fun b_x_46 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_50 () String)
(declare-fun b_x_50 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_59 () String)
(declare-fun b_x_59 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_64 () String)
(declare-fun b_x_64 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_73 () String)
(declare-fun b_x_73 () Bool)
(declare-fun x_76 () String)
(declare-fun b_x_76 () Bool)
(declare-fun x_78 () String)
(declare-fun b_x_78 () Bool)
(declare-fun x_81 () String)
(declare-fun b_x_81 () Bool)
(declare-fun x_84 () String)
(declare-fun b_x_84 () Bool)
(declare-fun x_85 () String)
(declare-fun b_x_85 () Bool)
(declare-fun x_87 () String)
(declare-fun b_x_87 () Bool)
(declare-fun x_88 () String)
(declare-fun b_x_88 () Bool)
(declare-fun x_91 () String)
(declare-fun b_x_91 () Bool)
(declare-fun x_92 () String)
(declare-fun b_x_92 () Bool)
(declare-fun x_93 () String)
(declare-fun b_x_93 () Bool)
(declare-fun x_94 () String)
(declare-fun b_x_94 () Bool)
(declare-fun x_95 () String)
(declare-fun b_x_95 () Bool)
(declare-fun x_97 () String)
(declare-fun b_x_97 () Bool)
(declare-fun x_98 () String)
(declare-fun b_x_98 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)


(assert (= literal_29 "\x26\x6e\x62\x73\x70\x3b\x3c\x41\x20\x53\x54\x59\x4c\x45\x3d\x43\x4f\x4c\x4f\x52\x3a\x62\x6c\x75\x65\x3b\x20\x48\x52\x45\x46\x3d\x5c\x22\x6d\x61\x69\x6c\x74\x6f\x3a"))

(assert (= literal_40 "\x26\x6e\x62\x73\x70\x3b\x3c\x41\x20\x53\x54\x59\x4c\x45\x3d\x43\x4f\x4c\x4f\x52\x3a\x62\x6c\x75\x65\x3b\x20\x48\x52\x45\x46\x3d\x5c\x22\x68\x74\x74\x70\x3a\x2f\x2f"))

(assert (= literal_42 "\x5c\x22\x3e\x3c\x49\x4d\x47\x20\x53\x52\x43\x3d"))

(assert (= literal_52 "\x5c\x22\x3e\x3c\x49\x4d\x47\x20\x53\x52\x43\x3d"))

(assert (= literal_47 "\x68\x74\x74\x70\x3a\x2f\x2f\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74\x2f\x65\x6d\x61\x69\x6c\x62\x75\x74\x2e\x70\x6e\x67"))

(assert (= literal_53 "\x26\x6e\x62\x73\x70\x3b\x3c\x41\x20\x53\x54\x59\x4c\x45\x3d\x43\x4f\x4c\x4f\x52\x3a\x62\x6c\x75\x65\x3b\x20\x48\x52\x45\x46\x3d\x70\x62\x6c\x67\x75\x65\x73\x74\x62\x6f\x6f\x6b\x2e\x70\x68\x70\x3f\x61\x63\x74\x69\x6f\x6e\x3d\x64\x65\x6c\x65\x74\x65\x26\x69\x64\x3d"))

(assert (= literal_54 "\x68\x74\x74\x70\x3a\x2f\x2f\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74\x2f\x68\x6f\x6d\x65\x62\x75\x74\x2e\x70\x6e\x67"))

(assert (= literal_58 "\x20\x42\x4f\x52\x44\x45\x52\x3d\x30\x20\x41\x4c\x54\x3d\x5c\x22"))

(assert (= literal_65 "\x3e\x3c\x49\x4d\x47\x20\x53\x52\x43\x3d"))

(assert (= literal_67 "\x20\x42\x4f\x52\x44\x45\x52\x3d\x30\x20\x41\x4c\x54\x3d\x5c\x22"))

(assert (= literal_68 "\x65\x6d\x61\x69\x6c\x22\x3e\x3c\x2f\x41\x3e\x26\x6e\x62\x73\x70\x3b"))

(assert (= literal_69 "\x68\x74\x74\x70\x3a\x2f\x2f\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74\x2f\x64\x65\x6c\x62\x75\x74\x2e\x70\x6e\x67"))

(assert (= literal_75 "\x77\x65\x62\x73\x69\x74\x65\x20\x55\x52\x4c\x22\x3e\x3c\x2f\x41\x3e\x26\x6e\x62\x73\x70\x3b"))

(assert (= literal_77 "\x3c\x2f\x54\x44\x3e\x3c\x54\x44\x20\x53\x54\x59\x4c\x45\x3d\x54\x45\x58\x54\x2d\x41\x4c\x49\x47\x4e\x3a\x72\x69\x67\x68\x74\x3b\x3e\x3c\x46\x4f\x4e\x54\x20\x53\x49\x5a\x45\x3d\x31\x3e"))

(assert (= literal_83 "\x20\x42\x4f\x52\x44\x45\x52\x3d\x30\x20\x41\x4c\x54\x3d\x5c\x22"))

(assert (= literal_90 "\x26\x6e\x62\x73\x70\x3b\x3c\x49\x4d\x47\x20\x53\x52\x43\x3d\x68\x74\x74\x70\x3a\x2f\x2f\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74\x2f\x69\x70\x62\x75\x74\x2e\x70\x6e\x67\x20\x42\x4f\x52\x44\x45\x52\x3d\x30\x20\x41\x4c\x54\x3d\x5c\x22\x22\x3e\x26\x6e\x62\x73\x70\x3b"))

(assert (= literal_89 "\x64\x65\x6c\x65\x74\x65\x22\x3e\x3c\x2f\x41\x3e\x26\x6e\x62\x73\x70\x3b"))

(assert (= literal_96 "\x3c\x2f\x46\x4f\x4e\x54\x3e\x3c\x2f\x54\x44\x3e\x3c\x2f\x54\x52\x3e"))
(assert (str.in_re atkPtn (str.to_re "livescript:")))
(declare-fun tmp_0 () String)
(assert (= tmp_0 (str.++ atkPtn atk_sigmaStar_2)))
(assert (= atk_sink (str.++ atk_sigmaStar_1 tmp_0)))
(assert (= x_10 (str.replace_re sigmaStar_448 (re.++ (str.to_re "<SCRIPT" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))

(assert (= x_17 (str.replace_re sigmaStar_252 (re.++ (str.to_re "<SCRIPT" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))

(assert (= x_23 (str.replace_re x_10 (re.++ (str.to_re "<script" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))

(assert (= x_34 (str.replace_re x_17 (re.++ (str.to_re "<script" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))

(assert (= x_37 (str.replace_re sigmaStar_362 (re.++ (str.to_re "<SCRIPT" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))



(assert (= x_41 (str.++ literal_29 x_23)))




(assert (= x_46 (str.++ literal_40 x_34)))




(assert (= x_48 (str.++ x_41 literal_42)))


(assert (= x_50 (str.replace_re x_37 (re.++ (str.to_re "<script" ) (re.union (re.* re.allchar) (str.to_re "" ) )) "BLOCKED") ))



(assert (= x_55 (str.++ x_46 literal_52)))




(assert (= x_56 (str.++ x_48 literal_47)))




(assert (= x_59 (str.++ literal_53 x_50)))




(assert (= x_62 (str.++ x_55 literal_54)))




(assert (= x_64 (str.++ x_56 literal_58)))




(assert (= x_70 (str.++ x_59 literal_65)))




(assert (= x_73 (str.++ x_62 literal_67)))




(assert (= x_76 (str.++ x_64 literal_68)))




(assert (= x_78 (str.++ x_70 literal_69)))


(assert (= x_81 x_76))

(assert (= x_81 sigmaStar_181))



(assert (= x_84 (str.++ x_73 literal_75)))




(assert (= x_85 (str.++ literal_77 x_81)))




(assert (= x_87 (str.++ x_78 literal_83)))


(assert (= x_88 x_84))

(assert (= x_88 sigmaStar_585))



(assert (= x_91 (str.++ x_85 x_88)))


(assert (= x_92 literal_90))

(assert (= x_92 sigmaStar_087))



(assert (= x_93 (str.++ x_87 literal_89)))




(assert (= x_94 (str.++ x_91 x_92)))




(assert (= x_95 (str.++ x_94 x_93)))




(assert (= x_97 (str.++ x_95 literal_96)))




(assert (= x_98 (str.++ sigmaStar_690 x_97)))


(assert (= sink x_98))
(assert (= sink atk_sink))


(check-sat)
(exit)