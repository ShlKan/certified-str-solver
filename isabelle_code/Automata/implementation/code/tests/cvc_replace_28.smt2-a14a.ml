open Automata;; 
let a0=nfa_construct ([], [(0,(0,59),4);(0,(93,65310),4);(0,(61,91),4);(0,(17,17),0);(0,(60,60),5);(1,(93,65310),4);(1,(0,83),4);(1,(85,91),4);(1,(17,17),0);(2,(93,65310),4);(2,(0,66),4);(2,(68,91),4);(2,(17,17),0);(2,(67,67),6);(3,(80,80),1);(3,(81,91),4);(3,(93,65310),4);(3,(17,17),0);(3,(0,79),4);(4,(0,91),4);(4,(93,65310),4);(4,(17,17),0);(5,(93,65310),4);(5,(0,82),4);(5,(84,91),4);(5,(17,17),0);(5,(83,83),2);(6,(0,81),4);(6,(93,65310),4);(6,(83,91),4);(6,(82,82),7);(6,(17,17),0);(7,(93,65310),4);(7,(74,91),4);(7,(0,72),4);(7,(17,17),0);(7,(73,73),3)], [0], [5] );;
let a1=nfa_construct ([], [(1000,(60,60),1007);(1001,(62,62),1003);(1002,(76,76),1006);(1003,(85,85),1008);(1005,(100,100),1001);(1006,(58,58),1009);(1007,(116,116),1005);(1008,(82,82),1002);(1009,(2,2),1004)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
