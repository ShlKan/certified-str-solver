open Automata;; 
let a0=nfa_construct ([], [(0,(93,65310),5);(0,(74,91),5);(0,(0,72),5);(0,(17,17),4);(0,(73,73),3);(1,(93,65310),5);(1,(0,83),5);(1,(85,91),5);(1,(17,17),4);(2,(93,65310),5);(2,(0,82),5);(2,(84,91),5);(2,(17,17),4);(2,(83,83),6);(3,(80,80),1);(3,(81,91),5);(3,(93,65310),5);(3,(17,17),4);(3,(0,79),5);(4,(0,59),5);(4,(93,65310),5);(4,(61,91),5);(4,(60,60),2);(4,(17,17),4);(5,(0,91),5);(5,(93,65310),5);(5,(17,17),4);(6,(93,65310),5);(6,(0,66),5);(6,(68,91),5);(6,(17,17),4);(6,(67,67),7);(7,(0,81),5);(7,(93,65310),5);(7,(83,91),5);(7,(82,82),0);(7,(17,17),4)], [0], [1] );;
let a1=nfa_construct ([], [(1000,(60,60),1007);(1001,(62,62),1003);(1002,(76,76),1006);(1003,(85,85),1008);(1005,(100,100),1001);(1006,(58,58),1009);(1007,(116,116),1005);(1008,(82,82),1002);(1009,(2,2),1004)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
