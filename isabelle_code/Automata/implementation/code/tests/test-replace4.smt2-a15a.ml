open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),2);(0,(97,97),2);(1,(48,48),11);(1,(97,97),11);(2,(48,48),5);(2,(97,97),5);(3,(48,48),8);(3,(97,97),8);(4,(49,49),14);(5,(48,48),12);(5,(97,97),12);(6,(49,49),7);(7,(49,49),15);(8,(48,48),9);(8,(97,97),9);(9,(49,49),6);(10,(49,49),3);(12,(48,48),4);(12,(97,97),4);(13,(48,48),0);(13,(97,97),0);(14,(48,48),10);(14,(97,97),10);(15,(48,48),1);(15,(97,97),1)], [0], [11] );;
let a1=nfa_construct ([], [(1001,(49,49),1006);(1001,(97,97),1006);(1002,(49,49),1004);(1002,(97,97),1004);(1003,(49,49),1007);(1003,(97,97),1007);(1004,(48,48),1003);(1005,(49,49),1001);(1005,(97,97),1001);(1006,(48,48),1000);(1007,(49,49),1008);(1007,(97,97),1008);(1008,(49,49),1009);(1008,(97,97),1009);(1009,(48,48),1005)], [1000], [1000] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
