open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),1);(0,(97,97),1);(1,(48,48),9);(1,(97,97),9);(2,(49,49),5);(3,(48,48),4);(3,(97,97),4);(4,(49,49),7);(6,(49,49),3);(7,(48,48),11);(7,(97,97),11);(8,(48,48),10);(8,(97,97),10);(9,(48,48),6);(9,(97,97),6);(10,(48,48),0);(10,(97,97),0);(11,(48,48),2);(11,(97,97),2)], [0], [5] );;
let a1=nfa_construct ([], [(1000,(49,49),1011);(1000,(97,97),1011);(1001,(48,48),1004);(1002,(48,48),1005);(1003,(49,49),1009);(1003,(97,97),1009);(1004,(48,48),1013);(1005,(49,49),1006);(1005,(97,97),1006);(1006,(49,49),1007);(1006,(97,97),1007);(1007,(49,49),1010);(1007,(97,97),1010);(1009,(48,48),1008);(1010,(48,48),1012);(1011,(49,49),1001);(1011,(97,97),1001);(1012,(49,49),1003);(1012,(97,97),1003);(1013,(49,49),1002);(1013,(97,97),1002)], [1000], [1008] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
