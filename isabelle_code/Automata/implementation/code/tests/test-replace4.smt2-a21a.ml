open Automata;; 
let a0=nfa_construct ([], [(0,(49,49),18);(1,(49,49),21);(2,(48,48),3);(2,(97,97),3);(3,(48,48),7);(3,(97,97),7);(4,(49,49),13);(5,(49,49),8);(6,(49,49),15);(7,(48,48),5);(7,(97,97),5);(8,(48,48),0);(8,(97,97),0);(9,(48,48),6);(9,(97,97),6);(10,(48,48),19);(10,(97,97),19);(11,(48,48),2);(11,(97,97),2);(12,(49,49),14);(13,(48,48),16);(13,(97,97),16);(14,(49,49),10);(15,(49,49),1);(16,(49,49),12);(17,(48,48),4);(17,(97,97),4);(18,(48,48),9);(18,(97,97),9);(20,(48,48),11);(20,(97,97),11);(21,(48,48),17);(21,(97,97),17)], [0], [19] );;
let a1=nfa_construct ([], [(1000,(49,49),1002);(1000,(97,97),1002);(1001,(49,49),1000);(1001,(97,97),1000);(1002,(48,48),1003)], [1000], [1003] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
