open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),4);(0,(97,97),4);(2,(49,49),1);(3,(48,48),7);(3,(97,97),7);(4,(49,49),6);(5,(48,48),0);(5,(97,97),0);(6,(48,48),8);(6,(97,97),8);(7,(48,48),5);(7,(97,97),5);(8,(49,49),9);(9,(48,48),11);(9,(97,97),11);(10,(49,49),2);(11,(48,48),10);(11,(97,97),10);(12,(48,48),3);(12,(97,97),3)], [0], [1] );;
let a1=nfa_construct ([], [(1000,(48,48),1007);(1001,(49,49),1010);(1001,(97,97),1010);(1002,(49,49),1005);(1002,(97,97),1005);(1003,(49,49),1009);(1003,(97,97),1009);(1004,(48,48),1003);(1005,(49,49),1008);(1005,(97,97),1008);(1006,(49,49),1000);(1006,(97,97),1000);(1008,(49,49),1012);(1008,(97,97),1012);(1009,(48,48),1002);(1010,(48,48),1004);(1011,(49,49),1006);(1011,(97,97),1006);(1012,(48,48),1011)], [1000], [1007] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
