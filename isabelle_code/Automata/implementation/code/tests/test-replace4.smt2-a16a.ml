open Automata;; 
let a0=nfa_construct ([], [(0,(49,49),8);(1,(49,49),10);(2,(48,48),12);(2,(97,97),12);(3,(48,48),0);(3,(97,97),0);(4,(48,48),13);(4,(97,97),13);(5,(49,49),15);(6,(48,48),4);(6,(97,97),4);(7,(48,48),5);(7,(97,97),5);(8,(49,49),11);(9,(49,49),7);(11,(49,49),2);(12,(48,48),1);(12,(97,97),1);(13,(48,48),14);(13,(97,97),14);(14,(48,48),16);(14,(97,97),16);(15,(48,48),3);(15,(97,97),3);(16,(48,48),9);(16,(97,97),9)], [0], [10] );;
let a1=nfa_construct ([], [(1000,(48,48),1001);(1001,(49,49),1005);(1001,(97,97),1005);(1002,(48,48),1007);(1003,(49,49),1004);(1003,(97,97),1004);(1004,(49,49),1000);(1004,(97,97),1000);(1005,(49,49),1006);(1005,(97,97),1006);(1006,(48,48),1008);(1007,(49,49),1003);(1007,(97,97),1003)], [1000], [1008] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
