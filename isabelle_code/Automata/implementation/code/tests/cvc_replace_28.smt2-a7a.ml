open Automata;; 
let a0=nfa_construct ([], [(0,(80,80),6);(0,(81,91),8);(0,(93,65310),8);(0,(17,17),3);(0,(0,79),8);(1,(93,65310),8);(1,(74,91),8);(1,(0,72),8);(1,(17,17),3);(1,(73,73),0);(2,(0,65310),2);(3,(0,59),8);(3,(93,65310),8);(3,(61,91),8);(3,(17,17),3);(3,(60,60),5);(4,(0,81),8);(4,(93,65310),8);(4,(83,91),8);(4,(82,82),1);(4,(17,17),3);(5,(93,65310),8);(5,(0,82),8);(5,(84,91),8);(5,(17,17),3);(5,(83,83),7);(6,(84,84),2);(6,(93,65310),8);(6,(0,83),8);(6,(85,91),8);(6,(17,17),3);(7,(93,65310),8);(7,(0,66),8);(7,(68,91),8);(7,(17,17),3);(7,(67,67),4);(8,(0,91),8);(8,(93,65310),8);(8,(17,17),3)], [0], [2] );;
let a1=nfa_construct ([], [(1000,(60,60),1002);(1001,(62,62),1005);(1002,(47,47),1003);(1003,(116,116),1004);(1004,(100,100),1001)], [1000], [1005] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
