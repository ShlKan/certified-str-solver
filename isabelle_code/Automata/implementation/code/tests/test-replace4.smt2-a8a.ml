open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),1);(0,(97,97),1);(1,(48,48),6);(1,(97,97),6);(2,(49,49),7);(3,(48,48),2);(3,(97,97),2);(4,(49,49),3);(5,(48,48),8);(5,(97,97),8);(6,(48,48),4);(6,(97,97),4);(8,(48,48),0);(8,(97,97),0)], [0], [7] );;
let a1=nfa_construct ([], [(1000,(48,48),1006);(1001,(49,49),1008);(1001,(97,97),1008);(1002,(48,48),1004);(1003,(48,48),1010);(1004,(49,49),1007);(1004,(97,97),1007);(1005,(49,49),1001);(1005,(97,97),1001);(1007,(48,48),1005);(1008,(49,49),1003);(1008,(97,97),1003);(1009,(49,49),1000);(1009,(97,97),1000);(1010,(49,49),1009);(1010,(97,97),1009);(1011,(48,48),1016);(1012,(49,49),1013);(1012,(97,97),1013);(1013,(49,49),1014);(1013,(97,97),1014);(1014,(48,48),1002);(1015,(49,49),1012);(1015,(97,97),1012);(1016,(48,48),1015)], [1000], [1006] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
