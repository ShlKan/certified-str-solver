open Automata;; 
let a0=nfa_construct ([], [(0,(80,80),1);(0,(81,91),5);(0,(93,65310),5);(0,(17,17),3);(0,(0,79),5);(1,(93,65310),5);(1,(84,84),6);(1,(0,83),5);(1,(85,91),5);(1,(17,17),3);(2,(0,81),5);(2,(93,65310),5);(2,(83,91),5);(2,(82,82),7);(2,(17,17),3);(3,(0,59),5);(3,(93,65310),5);(3,(61,91),5);(3,(17,17),3);(3,(60,60),4);(4,(93,65310),5);(4,(0,82),5);(4,(84,91),5);(4,(17,17),3);(4,(83,83),8);(5,(0,91),5);(5,(93,65310),5);(5,(17,17),3);(6,(0,65310),6);(7,(93,65310),5);(7,(74,91),5);(7,(0,72),5);(7,(17,17),3);(7,(73,73),0);(8,(93,65310),5);(8,(0,66),5);(8,(68,91),5);(8,(17,17),3);(8,(67,67),2)], [0], [6] );;
let a1=nfa_construct ([], [(1000,(60,60),1002);(1001,(62,62),1005);(1002,(47,47),1003);(1003,(116,116),1004);(1004,(100,100),1001)], [1000], [1005] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
