open Automata;; 
let a0=nfa_construct ([], [(0,(0,81),1);(0,(93,65310),1);(0,(83,91),1);(0,(82,82),6);(0,(17,17),5);(1,(0,91),1);(1,(93,65310),1);(1,(17,17),5);(2,(93,65310),1);(2,(0,83),1);(2,(85,91),1);(2,(17,17),5);(3,(93,65310),1);(3,(0,82),1);(3,(84,91),1);(3,(17,17),5);(3,(83,83),7);(4,(80,80),2);(4,(81,91),1);(4,(93,65310),1);(4,(17,17),5);(4,(0,79),1);(5,(0,59),1);(5,(93,65310),1);(5,(61,91),1);(5,(60,60),3);(5,(17,17),5);(6,(93,65310),1);(6,(74,91),1);(6,(0,72),1);(6,(17,17),5);(6,(73,73),4);(7,(93,65310),1);(7,(0,66),1);(7,(68,91),1);(7,(17,17),5);(7,(67,67),0)], [0], [5] );;
let a1=nfa_construct ([], [(1000,(60,60),1007);(1001,(62,62),1003);(1002,(76,76),1006);(1003,(85,85),1008);(1005,(100,100),1001);(1006,(58,58),1009);(1007,(116,116),1005);(1008,(82,82),1002);(1009,(2,2),1004)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
