open Automata;; 
let a0=nfa_construct ([], [(0,(0,91),0);(0,(93,65310),0);(0,(17,17),3);(1,(0,81),0);(1,(93,65310),0);(1,(83,91),0);(1,(82,82),6);(1,(17,17),3);(2,(93,65310),0);(2,(0,66),0);(2,(68,91),0);(2,(17,17),3);(2,(67,67),1);(3,(0,59),0);(3,(93,65310),0);(3,(61,91),0);(3,(17,17),3);(3,(60,60),4);(4,(93,65310),0);(4,(0,82),0);(4,(84,91),0);(4,(17,17),3);(4,(83,83),2);(5,(80,80),7);(5,(81,91),0);(5,(93,65310),0);(5,(17,17),3);(5,(0,79),0);(6,(93,65310),0);(6,(74,91),0);(6,(0,72),0);(6,(17,17),3);(6,(73,73),5);(7,(93,65310),0);(7,(0,83),0);(7,(85,91),0);(7,(17,17),3)], [0], [1] );;
let a1=nfa_construct ([], [(1000,(60,60),1007);(1001,(62,62),1003);(1002,(76,76),1006);(1003,(85,85),1008);(1005,(100,100),1001);(1006,(58,58),1009);(1007,(116,116),1005);(1008,(82,82),1002);(1009,(2,2),1004)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
