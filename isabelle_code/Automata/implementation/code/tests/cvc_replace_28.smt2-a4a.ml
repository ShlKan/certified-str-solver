open Automata;; 
let a0=nfa_construct ([], [(0,(93,65310),3);(0,(74,91),3);(0,(0,72),3);(0,(17,17),1);(0,(73,73),7);(1,(0,59),3);(1,(93,65310),3);(1,(61,91),3);(1,(17,17),1);(1,(60,60),8);(2,(0,65310),2);(3,(0,91),3);(3,(93,65310),3);(3,(17,17),1);(4,(93,65310),3);(4,(0,66),3);(4,(68,91),3);(4,(17,17),1);(4,(67,67),6);(5,(84,84),2);(5,(93,65310),3);(5,(0,83),3);(5,(85,91),3);(5,(17,17),1);(6,(0,81),3);(6,(93,65310),3);(6,(83,91),3);(6,(82,82),0);(6,(17,17),1);(7,(80,80),5);(7,(81,91),3);(7,(93,65310),3);(7,(17,17),1);(7,(0,79),3);(8,(93,65310),3);(8,(0,82),3);(8,(84,91),3);(8,(17,17),1);(8,(83,83),4)], [0], [2] );;
let a1=nfa_construct ([], [(1000,(60,60),1002);(1001,(62,62),1005);(1002,(47,47),1003);(1003,(116,116),1004);(1004,(100,100),1001)], [1000], [1005] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
