open Automata;; 
let a0=nfa_construct ([], [(0,(0,91),0);(0,(93,65310),0);(0,(17,17),6);(1,(80,80),7);(1,(81,91),0);(1,(93,65310),0);(1,(17,17),6);(1,(0,79),0);(2,(93,65310),0);(2,(74,91),0);(2,(0,72),0);(2,(17,17),6);(2,(73,73),1);(3,(93,65310),0);(3,(0,66),0);(3,(68,91),0);(3,(17,17),6);(3,(67,67),8);(4,(0,65310),4);(5,(93,65310),0);(5,(0,82),0);(5,(84,91),0);(5,(17,17),6);(5,(83,83),3);(6,(0,59),0);(6,(93,65310),0);(6,(61,91),0);(6,(60,60),5);(6,(17,17),6);(7,(93,65310),0);(7,(84,84),4);(7,(0,83),0);(7,(85,91),0);(7,(17,17),6);(8,(0,81),0);(8,(93,65310),0);(8,(83,91),0);(8,(82,82),2);(8,(17,17),6)], [0], [4] );;
let a1=nfa_construct ([], [(1000,(60,60),1002);(1001,(62,62),1005);(1002,(47,47),1003);(1003,(116,116),1004);(1004,(100,100),1001)], [1000], [1005] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
