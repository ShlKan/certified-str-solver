open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),6);(0,(97,97),6);(1,(48,48),5);(1,(97,97),5);(2,(49,49),1);(3,(49,49),2);(4,(48,48),13);(4,(97,97),13);(6,(49,49),8);(7,(48,48),9);(7,(97,97),9);(8,(48,48),11);(8,(97,97),11);(9,(48,48),0);(9,(97,97),0);(10,(49,49),3);(11,(49,49),4);(12,(48,48),7);(12,(97,97),7);(13,(48,48),10);(13,(97,97),10);(14,(48,48),12);(14,(97,97),12)], [0], [5] );;
let a1=nfa_construct ([], [(1000,(49,49),1005);(1000,(97,97),1005);(1001,(48,48),1010);(1003,(48,48),1002);(1004,(49,49),1007);(1004,(97,97),1007);(1005,(49,49),1009);(1005,(97,97),1009);(1006,(48,48),1004);(1007,(48,48),1000);(1008,(49,49),1003);(1008,(97,97),1003);(1009,(49,49),1001);(1009,(97,97),1001);(1010,(49,49),1008);(1010,(97,97),1008)], [1000], [1002] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
