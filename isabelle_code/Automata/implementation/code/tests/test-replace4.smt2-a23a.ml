open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),1);(0,(97,97),1);(1,(49,49),18);(2,(49,49),21);(3,(49,49),15);(4,(48,48),23);(4,(97,97),23);(5,(49,49),6);(6,(49,49),19);(7,(48,48),17);(7,(97,97),17);(8,(48,48),9);(8,(97,97),9);(9,(48,48),14);(9,(97,97),14);(10,(48,48),13);(10,(97,97),13);(11,(49,49),4);(12,(48,48),7);(12,(97,97),7);(13,(48,48),11);(13,(97,97),11);(14,(49,49),2);(15,(49,49),16);(16,(49,49),20);(17,(48,48),10);(17,(97,97),10);(18,(48,48),3);(18,(97,97),3);(20,(48,48),5);(20,(97,97),5);(21,(49,49),22);(22,(48,48),0);(22,(97,97),0);(23,(49,49),8)], [0], [19] );;
let a1=nfa_construct ([], [(1001,(48,48),1000)], [1000], [1000] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
