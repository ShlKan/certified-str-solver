open Automata;; 
let a0=nfa_construct ([], [(0,(0,59),3);(0,(93,65310),3);(0,(61,91),3);(0,(17,17),0);(0,(60,60),7);(1,(93,65310),3);(1,(74,91),3);(1,(0,72),3);(1,(17,17),0);(1,(73,73),2);(2,(80,80),5);(2,(81,91),3);(2,(93,65310),3);(2,(17,17),0);(2,(0,79),3);(3,(0,91),3);(3,(93,65310),3);(3,(17,17),0);(4,(0,81),3);(4,(93,65310),3);(4,(83,91),3);(4,(82,82),1);(4,(17,17),0);(5,(93,65310),3);(5,(0,83),3);(5,(85,91),3);(5,(17,17),0);(6,(93,65310),3);(6,(0,66),3);(6,(68,91),3);(6,(17,17),0);(6,(67,67),4);(7,(93,65310),3);(7,(0,82),3);(7,(84,91),3);(7,(17,17),0);(7,(83,83),6)], [0], [1] );;
let a1=nfa_construct ([], [(1000,(60,60),1007);(1001,(62,62),1003);(1002,(76,76),1006);(1003,(85,85),1008);(1005,(100,100),1001);(1006,(58,58),1009);(1007,(116,116),1005);(1008,(82,82),1002);(1009,(2,2),1004)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
