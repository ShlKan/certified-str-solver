open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),1);(0,(97,97),1);(1,(48,48),11);(1,(97,97),11);(3,(48,48),2);(3,(97,97),2);(4,(48,48),7);(4,(97,97),7);(5,(48,48),6);(5,(97,97),6);(6,(49,49),3);(7,(48,48),8);(7,(97,97),8);(8,(49,49),10);(9,(48,48),0);(9,(97,97),0);(10,(49,49),17);(11,(48,48),13);(11,(97,97),13);(12,(48,48),5);(12,(97,97),5);(13,(48,48),15);(13,(97,97),15);(14,(48,48),16);(14,(97,97),16);(15,(49,49),14);(16,(49,49),4);(17,(49,49),12)], [0], [2] );;
let a1=nfa_construct ([], [(1000,(48,48),1003);(1001,(49,49),1006);(1001,(97,97),1006);(1002,(49,49),1000);(1002,(97,97),1000);(1003,(49,49),1001);(1003,(97,97),1001);(1005,(49,49),1007);(1005,(97,97),1007);(1006,(48,48),1004);(1007,(49,49),1002);(1007,(97,97),1002)], [1000], [1004] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
