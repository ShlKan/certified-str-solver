open Automata;; 
let a0=nfa_construct ([], [(0,(48,48),5);(0,(97,97),5);(2,(48,48),9);(2,(97,97),9);(3,(48,48),1);(3,(97,97),1);(4,(48,48),7);(4,(97,97),7);(5,(49,49),6);(6,(48,48),3);(6,(97,97),3);(7,(48,48),10);(7,(97,97),10);(8,(49,49),0);(9,(48,48),4);(9,(97,97),4);(10,(48,48),8);(10,(97,97),8)], [0], [1] );;
let a1=nfa_construct ([], [(1000,(49,49),1009);(1000,(97,97),1009);(1001,(48,48),1012);(1003,(49,49),1008);(1003,(97,97),1008);(1004,(49,49),1001);(1004,(97,97),1001);(1005,(48,48),1006);(1006,(49,49),1014);(1006,(97,97),1014);(1007,(49,49),1005);(1007,(97,97),1005);(1008,(49,49),1004);(1008,(97,97),1004);(1009,(49,49),1007);(1009,(97,97),1007);(1010,(49,49),1011);(1010,(97,97),1011);(1011,(48,48),1000);(1012,(48,48),1010);(1013,(48,48),1002);(1014,(49,49),1013);(1014,(97,97),1013)], [1000], [1002] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
