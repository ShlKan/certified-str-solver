open Automata;; 
let a0=nfa_construct ([], [(0,(49,49),5);(1,(49,49),13);(2,(48,48),1);(2,(97,97),1);(3,(49,49),12);(4,(48,48),9);(4,(97,97),9);(5,(48,48),2);(5,(97,97),2);(6,(49,49),7);(8,(48,48),10);(8,(97,97),10);(9,(48,48),8);(9,(97,97),8);(10,(48,48),11);(10,(97,97),11);(11,(48,48),3);(11,(97,97),3);(12,(48,48),0);(12,(97,97),0);(13,(49,49),6)], [0], [7] );;
let a1=nfa_construct ([], [(1000,(48,48),1004);(1001,(48,48),1002);(1002,(49,49),1000);(1002,(97,97),1000);(1003,(49,49),1005);(1003,(97,97),1005);(1004,(49,49),1007);(1004,(97,97),1007);(1005,(48,48),1008);(1007,(49,49),1003);(1007,(97,97),1003);(1008,(49,49),1011);(1008,(97,97),1011);(1009,(48,48),1006);(1010,(48,48),1001);(1011,(49,49),1009);(1011,(97,97),1009)], [1000], [1006] );;
let product = nfa_concate a1 a0;;
print_auto (nfa_destruct product) ;;
